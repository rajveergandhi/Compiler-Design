Terminals unused in grammar

   tINTERFACE
   tSELECT
   tDEFER
   tGO
   tMAP
   tCHAN
   tGOTO
   tCONST
   tFALLTHROUGH
   tRANGE
   tIMPORT
   tREAD
   tELLIPSIS
   tARROW


Grammar

    0 $accept: program $end

    1 program: packages tSEMICOLON initial_dcls

    2 packages: tPACKAGE tIDENTIFIER

    3 initial_dcls: initial_dcls initial_dcl
    4             | %empty

    5 initial_dcl: dcl
    6            | funcDcl

    7 dcl: varDcl
    8    | typeDcl

    9 varDcl: tVAR vars tSEMICOLON
   10       | tVAR tOPEN_PAREN varslist tCLOSE_PAREN tSEMICOLON

   11 varslist: varslist vars tSEMICOLON
   12         | %empty

   13 vars: idlist type tASSIGN exprlist
   14     | idlist tASSIGN exprlist
   15     | idlist type

   16 idlist: id
   17       | id tCOMMA idlist

   18 id: tIDENTIFIER
   19   | tINT
   20   | tFLOAT
   21   | tBOOLEAN
   22   | tSTRING
   23   | tRUNE

   24 type: tINT
   25     | tFLOAT
   26     | tSTRING
   27     | tBOOLEAN
   28     | tRUNE
   29     | tOPEN_SQ tCLOSE_SQ type
   30     | tOPEN_SQ tINTVAL tCLOSE_SQ type
   31     | tSTRUCT tOPEN_BRACE memberlist tCLOSE_BRACE
   32     | tIDENTIFIER

   33 memberlist: memberlist member
   34           | %empty

   35 member: idlist type

   36 typeDcl: tTYPE types tSEMICOLON
   37        | tTYPE tOPEN_PAREN typeslist tCLOSE_PAREN tSEMICOLON

   38 typeslist: typeslist types tSEMICOLON
   39          | %empty

   40 types: tIDENTIFIER type

   41 funcDcl: tFUNC tIDENTIFIER function

   42 function: signature body

   43 signature: parameters
   44          | parameters type

   45 parameters: tOPEN_PAREN parameter_list tCLOSE_PAREN
   46           | tOPEN_PAREN tCLOSE_PAREN

   47 parameter_list: parameter_list tCOMMA parameter
   48               | parameter

   49 parameter: idlist type

   50 body: block

   51 block: simple_block tSEMICOLON

   52 simple_block: tOPEN_BRACE statement_list tCLOSE_BRACE

   53 statement_list: statement_list statement
   54               | %empty

   55 statement: dcl
   56          | block
   57          | print_stmt
   58          | println_stmt
   59          | return_stmt
   60          | if_stmt
   61          | for_stmt
   62          | switch_stmt
   63          | break_stmt
   64          | continue_stmt
   65          | simple_stmt

   66 print_stmt: tPRINT tOPEN_PAREN exprlist tCLOSE_PAREN tSEMICOLON
   67           | tPRINT tOPEN_PAREN tCLOSE_PAREN tSEMICOLON

   68 println_stmt: tPRINTLN tOPEN_PAREN exprlist tCLOSE_PAREN tSEMICOLON
   69             | tPRINTLN tOPEN_PAREN tCLOSE_PAREN tSEMICOLON

   70 return_stmt: tRETURN expr tSEMICOLON
   71            | tRETURN tSEMICOLON

   72 if_stmt: tIF if_condition block
   73        | tIF if_condition simple_block tELSE else_block

   74 if_condition: simple_stmt expr
   75             | expr

   76 else_block: block
   77           | if_stmt

   78 for_stmt: tFOR for_condition block

   79 for_condition: condition
   80              | simple_stmt_no_semi tSEMICOLON condition tSEMICOLON simple_stmt_no_semi

   81 condition: expr
   82          | %empty

   83 switch_stmt: tSWITCH switch_condition tOPEN_BRACE caselist tCLOSE_BRACE

   84 switch_condition: simple_stmt
   85                 | simple_stmt expr
   86                 | expr
   87                 | %empty

   88 caselist: case tCOLON statement_list

   89 case: tCASE exprlist
   90     | tDEFAULT

   91 break_stmt: tBREAK tSEMICOLON

   92 continue_stmt: tCONTINUE tSEMICOLON

   93 simple_stmt: simple_stmt_no_semi tSEMICOLON

   94 simple_stmt_no_semi: expr
   95                    | expr tINC
   96                    | expr tDEC
   97                    | assignment_stmt
   98                    | shortDcl

   99 assignment_stmt: exprlist assign exprlist

  100 shortDcl: exprlist tDECL exprlist

  101 exprlist: expr
  102         | exprlist tCOMMA expr

  103 expr: expr tPLUS expr
  104     | expr tMINUS expr
  105     | expr tMULT expr
  106     | expr tDIV expr
  107     | expr tMOD expr
  108     | expr tLT expr
  109     | expr tLT_EQ expr
  110     | expr tGT expr
  111     | expr tGT_EQ expr
  112     | expr tEQ_EQ expr
  113     | expr tNOT_EQUALS expr
  114     | expr tSHIFT_RIGHT expr
  115     | expr tSHIFT_LEFT expr
  116     | expr tAND expr
  117     | expr tAMP_XOR expr
  118     | expr tOR expr
  119     | expr tXOR expr
  120     | expr tLOGICAL_AND expr
  121     | expr tLOGICAL_OR expr
  122     | unary_op expr
  123     | append_expr
  124     | other_expressions

  125 unary_op: tPLUS
  126         | tMINUS
  127         | tNOT
  128         | tXOR

  129 append_expr: tAPPEND tOPEN_PAREN tIDENTIFIER tCOMMA exprlist tCLOSE_PAREN

  130 other_expressions: operand
  131                  | function_call
  132                  | typecasting
  133                  | other_expressions array_index
  134                  | other_expressions slice_range
  135                  | struct_selector

  136 operand: tOPEN_PAREN expr tCLOSE_PAREN
  137        | tIDENTIFIER
  138        | tINTVAL
  139        | tFLOATVAL
  140        | tSTRINGVAL
  141        | tRUNEVAL
  142        | tRAWSTRVAL

  143 function_call: tIDENTIFIER tOPEN_PAREN exprlist tCLOSE_PAREN
  144              | tIDENTIFIER tOPEN_PAREN tCLOSE_PAREN

  145 typecasting: tINT tOPEN_PAREN expr tCLOSE_PAREN
  146            | tFLOAT tOPEN_PAREN expr tCLOSE_PAREN
  147            | tBOOLEAN tOPEN_PAREN expr tCLOSE_PAREN
  148            | tRUNE tOPEN_PAREN expr tCLOSE_PAREN

  149 array_index: tOPEN_SQ expr tCLOSE_SQ

  150 slice_range: tOPEN_SQ expr tCOLON expr tCLOSE_SQ
  151            | tOPEN_SQ tCOLON expr tCLOSE_SQ
  152            | tOPEN_SQ expr tCOLON tCLOSE_SQ
  153            | tOPEN_SQ tCOLON tCLOSE_SQ
  154            | tOPEN_SQ expr tCOLON expr tCOLON expr tCLOSE_SQ
  155            | tOPEN_SQ tCOLON expr tCOLON expr tCLOSE_SQ

  156 struct_selector: tIDENTIFIER tPERIOD tIDENTIFIER

  157 assign: tASSIGN
  158       | tPLUS_EQ
  159       | tMINUS_EQ
  160       | tMULT_EQ
  161       | tDIV_EQ
  162       | tMOD_EQ
  163       | tAMP_EQ
  164       | tOR_EQ
  165       | tXOR_EQ
  166       | tSHIFT_LEFT_EQ
  167       | tSHIFT_RIGHT_EQ
  168       | tAMP_XOR_EQ


Terminals, with rules where they appear

$end (0) 0
error (256)
tBREAK (258) 91
tDEFAULT (259) 90
tFUNC (260) 41
tINTERFACE (261)
tSELECT (262)
tCASE (263) 89
tDEFER (264)
tGO (265)
tMAP (266)
tSTRUCT (267) 31
tCHAN (268)
tELSE (269) 73
tGOTO (270)
tPACKAGE (271) 2
tSWITCH (272) 83
tCONST (273)
tFALLTHROUGH (274)
tIF (275) 72 73
tRANGE (276)
tTYPE (277) 36 37
tCONTINUE (278) 92
tFOR (279) 78
tIMPORT (280)
tRETURN (281) 70 71
tVAR (282) 9 10
tPRINT (283) 66 67
tPRINTLN (284) 68 69
tAPPEND (285) 129
tREAD (286)
tSEMICOLON (287) 1 9 10 11 36 37 38 51 66 67 68 69 70 71 80 91 92 93
tCOLON (288) 88 150 151 152 153 154 155
tCOMMA (289) 17 47 102 129
tPERIOD (290) 156
tELLIPSIS (291)
tASSIGN (292) 13 14 157
tMULT (293) 105
tDIV (294) 106
tPLUS (295) 103 125
tMINUS (296) 104 126
tAND (297) 116
tOR (298) 118
tMOD (299) 107
tXOR (300) 119 128
tNOT (301) 127
tOPEN_PAREN (302) 10 37 45 46 66 67 68 69 129 136 143 144 145 146 147
    148
tCLOSE_PAREN (303) 10 37 45 46 66 67 68 69 129 136 143 144 145 146
    147 148
tOPEN_BRACE (304) 31 52 83
tCLOSE_BRACE (305) 31 52 83
tOPEN_SQ (306) 29 30 149 150 151 152 153 154 155
tCLOSE_SQ (307) 29 30 149 150 151 152 153 154 155
tDECL (308) 100
tEQ_EQ (309) 112
tNOT_EQUALS (310) 113
tLOGICAL_AND (311) 120
tLOGICAL_OR (312) 121
tPLUS_EQ (313) 158
tAMP_EQ (314) 163
tMINUS_EQ (315) 159
tMOD_EQ (316) 162
tMULT_EQ (317) 160
tDIV_EQ (318) 161
tOR_EQ (319) 164
tLT (320) 108
tGT (321) 110
tLT_EQ (322) 109
tGT_EQ (323) 111
tXOR_EQ (324) 165
tARROW (325)
tSHIFT_LEFT (326) 115
tSHIFT_RIGHT (327) 114
tSHIFT_LEFT_EQ (328) 166
tSHIFT_RIGHT_EQ (329) 167
tINC (330) 95
tDEC (331) 96
tAMP_XOR (332) 117
tAMP_XOR_EQ (333) 168
tINT (334) 19 24 145
tFLOAT (335) 20 25 146
tSTRING (336) 22 26
tBOOLEAN (337) 21 27 147
tRUNE (338) 23 28 148
tUNARY (339)
tINTVAL (340) 30 138
tFLOATVAL (341) 139
tSTRINGVAL (342) 140
tRAWSTRVAL (343) 142
tIDENTIFIER (344) 2 18 32 40 41 129 137 143 144 156
tRUNEVAL (345) 141


Nonterminals, with rules where they appear

$accept (91)
    on left: 0
program (92)
    on left: 1, on right: 0
packages (93)
    on left: 2, on right: 1
initial_dcls (94)
    on left: 3 4, on right: 1 3
initial_dcl (95)
    on left: 5 6, on right: 3
dcl (96)
    on left: 7 8, on right: 5 55
varDcl (97)
    on left: 9 10, on right: 7
varslist (98)
    on left: 11 12, on right: 10 11
vars (99)
    on left: 13 14 15, on right: 9 11
idlist (100)
    on left: 16 17, on right: 13 14 15 17 35 49
id (101)
    on left: 18 19 20 21 22 23, on right: 16 17
type (102)
    on left: 24 25 26 27 28 29 30 31 32, on right: 13 15 29 30 35 40
    44 49
memberlist (103)
    on left: 33 34, on right: 31 33
member (104)
    on left: 35, on right: 33
typeDcl (105)
    on left: 36 37, on right: 8
typeslist (106)
    on left: 38 39, on right: 37 38
types (107)
    on left: 40, on right: 36 38
funcDcl (108)
    on left: 41, on right: 6
function (109)
    on left: 42, on right: 41
signature (110)
    on left: 43 44, on right: 42
parameters (111)
    on left: 45 46, on right: 43 44
parameter_list (112)
    on left: 47 48, on right: 45 47
parameter (113)
    on left: 49, on right: 47 48
body (114)
    on left: 50, on right: 42
block (115)
    on left: 51, on right: 50 56 72 76 78
simple_block (116)
    on left: 52, on right: 51 73
statement_list (117)
    on left: 53 54, on right: 52 53 88
statement (118)
    on left: 55 56 57 58 59 60 61 62 63 64 65, on right: 53
print_stmt (119)
    on left: 66 67, on right: 57
println_stmt (120)
    on left: 68 69, on right: 58
return_stmt (121)
    on left: 70 71, on right: 59
if_stmt (122)
    on left: 72 73, on right: 60 77
if_condition (123)
    on left: 74 75, on right: 72 73
else_block (124)
    on left: 76 77, on right: 73
for_stmt (125)
    on left: 78, on right: 61
for_condition (126)
    on left: 79 80, on right: 78
condition (127)
    on left: 81 82, on right: 79 80
switch_stmt (128)
    on left: 83, on right: 62
switch_condition (129)
    on left: 84 85 86 87, on right: 83
caselist (130)
    on left: 88, on right: 83
case (131)
    on left: 89 90, on right: 88
break_stmt (132)
    on left: 91, on right: 63
continue_stmt (133)
    on left: 92, on right: 64
simple_stmt (134)
    on left: 93, on right: 65 74 84 85
simple_stmt_no_semi (135)
    on left: 94 95 96 97 98, on right: 80 93
assignment_stmt (136)
    on left: 99, on right: 97
shortDcl (137)
    on left: 100, on right: 98
exprlist (138)
    on left: 101 102, on right: 13 14 66 68 89 99 100 102 129 143
expr (139)
    on left: 103 104 105 106 107 108 109 110 111 112 113 114 115 116
    117 118 119 120 121 122 123 124, on right: 70 74 75 81 85 86 94
    95 96 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115
    116 117 118 119 120 121 122 136 145 146 147 148 149 150 151 152
    154 155
unary_op (140)
    on left: 125 126 127 128, on right: 122
append_expr (141)
    on left: 129, on right: 123
other_expressions (142)
    on left: 130 131 132 133 134 135, on right: 124 133 134
operand (143)
    on left: 136 137 138 139 140 141 142, on right: 130
function_call (144)
    on left: 143 144, on right: 131
typecasting (145)
    on left: 145 146 147 148, on right: 132
array_index (146)
    on left: 149, on right: 133
slice_range (147)
    on left: 150 151 152 153 154 155, on right: 134
struct_selector (148)
    on left: 156, on right: 135
assign (149)
    on left: 157 158 159 160 161 162 163 164 165 166 167 168, on right:
    99


State 0

    0 $accept: . program $end

    tPACKAGE  shift, and go to state 1

    program   go to state 2
    packages  go to state 3


State 1

    2 packages: tPACKAGE . tIDENTIFIER

    tIDENTIFIER  shift, and go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    1 program: packages . tSEMICOLON initial_dcls

    tSEMICOLON  shift, and go to state 6


State 4

    2 packages: tPACKAGE tIDENTIFIER .

    $default  reduce using rule 2 (packages)


State 5

    0 $accept: program $end .

    $default  accept


State 6

    1 program: packages tSEMICOLON . initial_dcls

    $default  reduce using rule 4 (initial_dcls)

    initial_dcls  go to state 7


State 7

    1 program: packages tSEMICOLON initial_dcls .
    3 initial_dcls: initial_dcls . initial_dcl

    tFUNC  shift, and go to state 8
    tTYPE  shift, and go to state 9
    tVAR   shift, and go to state 10

    $default  reduce using rule 1 (program)

    initial_dcl  go to state 11
    dcl          go to state 12
    varDcl       go to state 13
    typeDcl      go to state 14
    funcDcl      go to state 15


State 8

   41 funcDcl: tFUNC . tIDENTIFIER function

    tIDENTIFIER  shift, and go to state 16


State 9

   36 typeDcl: tTYPE . types tSEMICOLON
   37        | tTYPE . tOPEN_PAREN typeslist tCLOSE_PAREN tSEMICOLON

    tOPEN_PAREN  shift, and go to state 17
    tIDENTIFIER  shift, and go to state 18

    types  go to state 19


State 10

    9 varDcl: tVAR . vars tSEMICOLON
   10       | tVAR . tOPEN_PAREN varslist tCLOSE_PAREN tSEMICOLON

    tOPEN_PAREN  shift, and go to state 20
    tINT         shift, and go to state 21
    tFLOAT       shift, and go to state 22
    tSTRING      shift, and go to state 23
    tBOOLEAN     shift, and go to state 24
    tRUNE        shift, and go to state 25
    tIDENTIFIER  shift, and go to state 26

    vars    go to state 27
    idlist  go to state 28
    id      go to state 29


State 11

    3 initial_dcls: initial_dcls initial_dcl .

    $default  reduce using rule 3 (initial_dcls)


State 12

    5 initial_dcl: dcl .

    $default  reduce using rule 5 (initial_dcl)


State 13

    7 dcl: varDcl .

    $default  reduce using rule 7 (dcl)


State 14

    8 dcl: typeDcl .

    $default  reduce using rule 8 (dcl)


State 15

    6 initial_dcl: funcDcl .

    $default  reduce using rule 6 (initial_dcl)


State 16

   41 funcDcl: tFUNC tIDENTIFIER . function

    tOPEN_PAREN  shift, and go to state 30

    function    go to state 31
    signature   go to state 32
    parameters  go to state 33


State 17

   37 typeDcl: tTYPE tOPEN_PAREN . typeslist tCLOSE_PAREN tSEMICOLON

    $default  reduce using rule 39 (typeslist)

    typeslist  go to state 34


State 18

   40 types: tIDENTIFIER . type

    tSTRUCT      shift, and go to state 35
    tOPEN_SQ     shift, and go to state 36
    tINT         shift, and go to state 37
    tFLOAT       shift, and go to state 38
    tSTRING      shift, and go to state 39
    tBOOLEAN     shift, and go to state 40
    tRUNE        shift, and go to state 41
    tIDENTIFIER  shift, and go to state 42

    type  go to state 43


State 19

   36 typeDcl: tTYPE types . tSEMICOLON

    tSEMICOLON  shift, and go to state 44


State 20

   10 varDcl: tVAR tOPEN_PAREN . varslist tCLOSE_PAREN tSEMICOLON

    $default  reduce using rule 12 (varslist)

    varslist  go to state 45


State 21

   19 id: tINT .

    $default  reduce using rule 19 (id)


State 22

   20 id: tFLOAT .

    $default  reduce using rule 20 (id)


State 23

   22 id: tSTRING .

    $default  reduce using rule 22 (id)


State 24

   21 id: tBOOLEAN .

    $default  reduce using rule 21 (id)


State 25

   23 id: tRUNE .

    $default  reduce using rule 23 (id)


State 26

   18 id: tIDENTIFIER .

    $default  reduce using rule 18 (id)


State 27

    9 varDcl: tVAR vars . tSEMICOLON

    tSEMICOLON  shift, and go to state 46


State 28

   13 vars: idlist . type tASSIGN exprlist
   14     | idlist . tASSIGN exprlist
   15     | idlist . type

    tSTRUCT      shift, and go to state 35
    tASSIGN      shift, and go to state 47
    tOPEN_SQ     shift, and go to state 36
    tINT         shift, and go to state 37
    tFLOAT       shift, and go to state 38
    tSTRING      shift, and go to state 39
    tBOOLEAN     shift, and go to state 40
    tRUNE        shift, and go to state 41
    tIDENTIFIER  shift, and go to state 42

    type  go to state 48


State 29

   16 idlist: id .
   17       | id . tCOMMA idlist

    tCOMMA  shift, and go to state 49

    $default  reduce using rule 16 (idlist)


State 30

   45 parameters: tOPEN_PAREN . parameter_list tCLOSE_PAREN
   46           | tOPEN_PAREN . tCLOSE_PAREN

    tCLOSE_PAREN  shift, and go to state 50
    tINT          shift, and go to state 21
    tFLOAT        shift, and go to state 22
    tSTRING       shift, and go to state 23
    tBOOLEAN      shift, and go to state 24
    tRUNE         shift, and go to state 25
    tIDENTIFIER   shift, and go to state 26

    idlist          go to state 51
    id              go to state 29
    parameter_list  go to state 52
    parameter       go to state 53


State 31

   41 funcDcl: tFUNC tIDENTIFIER function .

    $default  reduce using rule 41 (funcDcl)


State 32

   42 function: signature . body

    tOPEN_BRACE  shift, and go to state 54

    body          go to state 55
    block         go to state 56
    simple_block  go to state 57


State 33

   43 signature: parameters .
   44          | parameters . type

    tSTRUCT      shift, and go to state 35
    tOPEN_SQ     shift, and go to state 36
    tINT         shift, and go to state 37
    tFLOAT       shift, and go to state 38
    tSTRING      shift, and go to state 39
    tBOOLEAN     shift, and go to state 40
    tRUNE        shift, and go to state 41
    tIDENTIFIER  shift, and go to state 42

    $default  reduce using rule 43 (signature)

    type  go to state 58


State 34

   37 typeDcl: tTYPE tOPEN_PAREN typeslist . tCLOSE_PAREN tSEMICOLON
   38 typeslist: typeslist . types tSEMICOLON

    tCLOSE_PAREN  shift, and go to state 59
    tIDENTIFIER   shift, and go to state 18

    types  go to state 60


State 35

   31 type: tSTRUCT . tOPEN_BRACE memberlist tCLOSE_BRACE

    tOPEN_BRACE  shift, and go to state 61


State 36

   29 type: tOPEN_SQ . tCLOSE_SQ type
   30     | tOPEN_SQ . tINTVAL tCLOSE_SQ type

    tCLOSE_SQ  shift, and go to state 62
    tINTVAL    shift, and go to state 63


State 37

   24 type: tINT .

    $default  reduce using rule 24 (type)


State 38

   25 type: tFLOAT .

    $default  reduce using rule 25 (type)


State 39

   26 type: tSTRING .

    $default  reduce using rule 26 (type)


State 40

   27 type: tBOOLEAN .

    $default  reduce using rule 27 (type)


State 41

   28 type: tRUNE .

    $default  reduce using rule 28 (type)


State 42

   32 type: tIDENTIFIER .

    $default  reduce using rule 32 (type)


State 43

   40 types: tIDENTIFIER type .

    $default  reduce using rule 40 (types)


State 44

   36 typeDcl: tTYPE types tSEMICOLON .

    $default  reduce using rule 36 (typeDcl)


State 45

   10 varDcl: tVAR tOPEN_PAREN varslist . tCLOSE_PAREN tSEMICOLON
   11 varslist: varslist . vars tSEMICOLON

    tCLOSE_PAREN  shift, and go to state 64
    tINT          shift, and go to state 21
    tFLOAT        shift, and go to state 22
    tSTRING       shift, and go to state 23
    tBOOLEAN      shift, and go to state 24
    tRUNE         shift, and go to state 25
    tIDENTIFIER   shift, and go to state 26

    vars    go to state 65
    idlist  go to state 28
    id      go to state 29


State 46

    9 varDcl: tVAR vars tSEMICOLON .

    $default  reduce using rule 9 (varDcl)


State 47

   14 vars: idlist tASSIGN . exprlist

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    exprlist           go to state 82
    expr               go to state 83
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 48

   13 vars: idlist type . tASSIGN exprlist
   15     | idlist type .

    tASSIGN  shift, and go to state 91

    $default  reduce using rule 15 (vars)


State 49

   17 idlist: id tCOMMA . idlist

    tINT         shift, and go to state 21
    tFLOAT       shift, and go to state 22
    tSTRING      shift, and go to state 23
    tBOOLEAN     shift, and go to state 24
    tRUNE        shift, and go to state 25
    tIDENTIFIER  shift, and go to state 26

    idlist  go to state 92
    id      go to state 29


State 50

   46 parameters: tOPEN_PAREN tCLOSE_PAREN .

    $default  reduce using rule 46 (parameters)


State 51

   49 parameter: idlist . type

    tSTRUCT      shift, and go to state 35
    tOPEN_SQ     shift, and go to state 36
    tINT         shift, and go to state 37
    tFLOAT       shift, and go to state 38
    tSTRING      shift, and go to state 39
    tBOOLEAN     shift, and go to state 40
    tRUNE        shift, and go to state 41
    tIDENTIFIER  shift, and go to state 42

    type  go to state 93


State 52

   45 parameters: tOPEN_PAREN parameter_list . tCLOSE_PAREN
   47 parameter_list: parameter_list . tCOMMA parameter

    tCOMMA        shift, and go to state 94
    tCLOSE_PAREN  shift, and go to state 95


State 53

   48 parameter_list: parameter .

    $default  reduce using rule 48 (parameter_list)


State 54

   52 simple_block: tOPEN_BRACE . statement_list tCLOSE_BRACE

    $default  reduce using rule 54 (statement_list)

    statement_list  go to state 96


State 55

   42 function: signature body .

    $default  reduce using rule 42 (function)


State 56

   50 body: block .

    $default  reduce using rule 50 (body)


State 57

   51 block: simple_block . tSEMICOLON

    tSEMICOLON  shift, and go to state 97


State 58

   44 signature: parameters type .

    $default  reduce using rule 44 (signature)


State 59

   37 typeDcl: tTYPE tOPEN_PAREN typeslist tCLOSE_PAREN . tSEMICOLON

    tSEMICOLON  shift, and go to state 98


State 60

   38 typeslist: typeslist types . tSEMICOLON

    tSEMICOLON  shift, and go to state 99


State 61

   31 type: tSTRUCT tOPEN_BRACE . memberlist tCLOSE_BRACE

    $default  reduce using rule 34 (memberlist)

    memberlist  go to state 100


State 62

   29 type: tOPEN_SQ tCLOSE_SQ . type

    tSTRUCT      shift, and go to state 35
    tOPEN_SQ     shift, and go to state 36
    tINT         shift, and go to state 37
    tFLOAT       shift, and go to state 38
    tSTRING      shift, and go to state 39
    tBOOLEAN     shift, and go to state 40
    tRUNE        shift, and go to state 41
    tIDENTIFIER  shift, and go to state 42

    type  go to state 101


State 63

   30 type: tOPEN_SQ tINTVAL . tCLOSE_SQ type

    tCLOSE_SQ  shift, and go to state 102


State 64

   10 varDcl: tVAR tOPEN_PAREN varslist tCLOSE_PAREN . tSEMICOLON

    tSEMICOLON  shift, and go to state 103


State 65

   11 varslist: varslist vars . tSEMICOLON

    tSEMICOLON  shift, and go to state 104


State 66

  129 append_expr: tAPPEND . tOPEN_PAREN tIDENTIFIER tCOMMA exprlist tCLOSE_PAREN

    tOPEN_PAREN  shift, and go to state 105


State 67

  125 unary_op: tPLUS .

    $default  reduce using rule 125 (unary_op)


State 68

  126 unary_op: tMINUS .

    $default  reduce using rule 126 (unary_op)


State 69

  128 unary_op: tXOR .

    $default  reduce using rule 128 (unary_op)


State 70

  127 unary_op: tNOT .

    $default  reduce using rule 127 (unary_op)


State 71

  136 operand: tOPEN_PAREN . expr tCLOSE_PAREN

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    expr               go to state 106
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 72

  145 typecasting: tINT . tOPEN_PAREN expr tCLOSE_PAREN

    tOPEN_PAREN  shift, and go to state 107


State 73

  146 typecasting: tFLOAT . tOPEN_PAREN expr tCLOSE_PAREN

    tOPEN_PAREN  shift, and go to state 108


State 74

  147 typecasting: tBOOLEAN . tOPEN_PAREN expr tCLOSE_PAREN

    tOPEN_PAREN  shift, and go to state 109


State 75

  148 typecasting: tRUNE . tOPEN_PAREN expr tCLOSE_PAREN

    tOPEN_PAREN  shift, and go to state 110


State 76

  138 operand: tINTVAL .

    $default  reduce using rule 138 (operand)


State 77

  139 operand: tFLOATVAL .

    $default  reduce using rule 139 (operand)


State 78

  140 operand: tSTRINGVAL .

    $default  reduce using rule 140 (operand)


State 79

  142 operand: tRAWSTRVAL .

    $default  reduce using rule 142 (operand)


State 80

  137 operand: tIDENTIFIER .
  143 function_call: tIDENTIFIER . tOPEN_PAREN exprlist tCLOSE_PAREN
  144              | tIDENTIFIER . tOPEN_PAREN tCLOSE_PAREN
  156 struct_selector: tIDENTIFIER . tPERIOD tIDENTIFIER

    tPERIOD      shift, and go to state 111
    tOPEN_PAREN  shift, and go to state 112

    $default  reduce using rule 137 (operand)


State 81

  141 operand: tRUNEVAL .

    $default  reduce using rule 141 (operand)


State 82

   14 vars: idlist tASSIGN exprlist .
  102 exprlist: exprlist . tCOMMA expr

    tCOMMA  shift, and go to state 113

    $default  reduce using rule 14 (vars)


State 83

  101 exprlist: expr .
  103 expr: expr . tPLUS expr
  104     | expr . tMINUS expr
  105     | expr . tMULT expr
  106     | expr . tDIV expr
  107     | expr . tMOD expr
  108     | expr . tLT expr
  109     | expr . tLT_EQ expr
  110     | expr . tGT expr
  111     | expr . tGT_EQ expr
  112     | expr . tEQ_EQ expr
  113     | expr . tNOT_EQUALS expr
  114     | expr . tSHIFT_RIGHT expr
  115     | expr . tSHIFT_LEFT expr
  116     | expr . tAND expr
  117     | expr . tAMP_XOR expr
  118     | expr . tOR expr
  119     | expr . tXOR expr
  120     | expr . tLOGICAL_AND expr
  121     | expr . tLOGICAL_OR expr

    tMULT         shift, and go to state 114
    tDIV          shift, and go to state 115
    tPLUS         shift, and go to state 116
    tMINUS        shift, and go to state 117
    tAND          shift, and go to state 118
    tOR           shift, and go to state 119
    tMOD          shift, and go to state 120
    tXOR          shift, and go to state 121
    tEQ_EQ        shift, and go to state 122
    tNOT_EQUALS   shift, and go to state 123
    tLOGICAL_AND  shift, and go to state 124
    tLOGICAL_OR   shift, and go to state 125
    tLT           shift, and go to state 126
    tGT           shift, and go to state 127
    tLT_EQ        shift, and go to state 128
    tGT_EQ        shift, and go to state 129
    tSHIFT_LEFT   shift, and go to state 130
    tSHIFT_RIGHT  shift, and go to state 131
    tAMP_XOR      shift, and go to state 132

    $default  reduce using rule 101 (exprlist)


State 84

  122 expr: unary_op . expr

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    expr               go to state 133
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 85

  123 expr: append_expr .

    $default  reduce using rule 123 (expr)


State 86

  124 expr: other_expressions .
  133 other_expressions: other_expressions . array_index
  134                  | other_expressions . slice_range

    tOPEN_SQ  shift, and go to state 134

    $default  reduce using rule 124 (expr)

    array_index  go to state 135
    slice_range  go to state 136


State 87

  130 other_expressions: operand .

    $default  reduce using rule 130 (other_expressions)


State 88

  131 other_expressions: function_call .

    $default  reduce using rule 131 (other_expressions)


State 89

  132 other_expressions: typecasting .

    $default  reduce using rule 132 (other_expressions)


State 90

  135 other_expressions: struct_selector .

    $default  reduce using rule 135 (other_expressions)


State 91

   13 vars: idlist type tASSIGN . exprlist

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    exprlist           go to state 137
    expr               go to state 83
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 92

   17 idlist: id tCOMMA idlist .

    $default  reduce using rule 17 (idlist)


State 93

   49 parameter: idlist type .

    $default  reduce using rule 49 (parameter)


State 94

   47 parameter_list: parameter_list tCOMMA . parameter

    tINT         shift, and go to state 21
    tFLOAT       shift, and go to state 22
    tSTRING      shift, and go to state 23
    tBOOLEAN     shift, and go to state 24
    tRUNE        shift, and go to state 25
    tIDENTIFIER  shift, and go to state 26

    idlist     go to state 51
    id         go to state 29
    parameter  go to state 138


State 95

   45 parameters: tOPEN_PAREN parameter_list tCLOSE_PAREN .

    $default  reduce using rule 45 (parameters)


State 96

   52 simple_block: tOPEN_BRACE statement_list . tCLOSE_BRACE
   53 statement_list: statement_list . statement

    tBREAK        shift, and go to state 139
    tSWITCH       shift, and go to state 140
    tIF           shift, and go to state 141
    tTYPE         shift, and go to state 9
    tCONTINUE     shift, and go to state 142
    tFOR          shift, and go to state 143
    tRETURN       shift, and go to state 144
    tVAR          shift, and go to state 10
    tPRINT        shift, and go to state 145
    tPRINTLN      shift, and go to state 146
    tAPPEND       shift, and go to state 66
    tPLUS         shift, and go to state 67
    tMINUS        shift, and go to state 68
    tXOR          shift, and go to state 69
    tNOT          shift, and go to state 70
    tOPEN_PAREN   shift, and go to state 71
    tOPEN_BRACE   shift, and go to state 54
    tCLOSE_BRACE  shift, and go to state 147
    tINT          shift, and go to state 72
    tFLOAT        shift, and go to state 73
    tBOOLEAN      shift, and go to state 74
    tRUNE         shift, and go to state 75
    tINTVAL       shift, and go to state 76
    tFLOATVAL     shift, and go to state 77
    tSTRINGVAL    shift, and go to state 78
    tRAWSTRVAL    shift, and go to state 79
    tIDENTIFIER   shift, and go to state 80
    tRUNEVAL      shift, and go to state 81

    dcl                  go to state 148
    varDcl               go to state 13
    typeDcl              go to state 14
    block                go to state 149
    simple_block         go to state 57
    statement            go to state 150
    print_stmt           go to state 151
    println_stmt         go to state 152
    return_stmt          go to state 153
    if_stmt              go to state 154
    for_stmt             go to state 155
    switch_stmt          go to state 156
    break_stmt           go to state 157
    continue_stmt        go to state 158
    simple_stmt          go to state 159
    simple_stmt_no_semi  go to state 160
    assignment_stmt      go to state 161
    shortDcl             go to state 162
    exprlist             go to state 163
    expr                 go to state 164
    unary_op             go to state 84
    append_expr          go to state 85
    other_expressions    go to state 86
    operand              go to state 87
    function_call        go to state 88
    typecasting          go to state 89
    struct_selector      go to state 90


State 97

   51 block: simple_block tSEMICOLON .

    $default  reduce using rule 51 (block)


State 98

   37 typeDcl: tTYPE tOPEN_PAREN typeslist tCLOSE_PAREN tSEMICOLON .

    $default  reduce using rule 37 (typeDcl)


State 99

   38 typeslist: typeslist types tSEMICOLON .

    $default  reduce using rule 38 (typeslist)


State 100

   31 type: tSTRUCT tOPEN_BRACE memberlist . tCLOSE_BRACE
   33 memberlist: memberlist . member

    tCLOSE_BRACE  shift, and go to state 165
    tINT          shift, and go to state 21
    tFLOAT        shift, and go to state 22
    tSTRING       shift, and go to state 23
    tBOOLEAN      shift, and go to state 24
    tRUNE         shift, and go to state 25
    tIDENTIFIER   shift, and go to state 26

    idlist  go to state 166
    id      go to state 29
    member  go to state 167


State 101

   29 type: tOPEN_SQ tCLOSE_SQ type .

    $default  reduce using rule 29 (type)


State 102

   30 type: tOPEN_SQ tINTVAL tCLOSE_SQ . type

    tSTRUCT      shift, and go to state 35
    tOPEN_SQ     shift, and go to state 36
    tINT         shift, and go to state 37
    tFLOAT       shift, and go to state 38
    tSTRING      shift, and go to state 39
    tBOOLEAN     shift, and go to state 40
    tRUNE        shift, and go to state 41
    tIDENTIFIER  shift, and go to state 42

    type  go to state 168


State 103

   10 varDcl: tVAR tOPEN_PAREN varslist tCLOSE_PAREN tSEMICOLON .

    $default  reduce using rule 10 (varDcl)


State 104

   11 varslist: varslist vars tSEMICOLON .

    $default  reduce using rule 11 (varslist)


State 105

  129 append_expr: tAPPEND tOPEN_PAREN . tIDENTIFIER tCOMMA exprlist tCLOSE_PAREN

    tIDENTIFIER  shift, and go to state 169


State 106

  103 expr: expr . tPLUS expr
  104     | expr . tMINUS expr
  105     | expr . tMULT expr
  106     | expr . tDIV expr
  107     | expr . tMOD expr
  108     | expr . tLT expr
  109     | expr . tLT_EQ expr
  110     | expr . tGT expr
  111     | expr . tGT_EQ expr
  112     | expr . tEQ_EQ expr
  113     | expr . tNOT_EQUALS expr
  114     | expr . tSHIFT_RIGHT expr
  115     | expr . tSHIFT_LEFT expr
  116     | expr . tAND expr
  117     | expr . tAMP_XOR expr
  118     | expr . tOR expr
  119     | expr . tXOR expr
  120     | expr . tLOGICAL_AND expr
  121     | expr . tLOGICAL_OR expr
  136 operand: tOPEN_PAREN expr . tCLOSE_PAREN

    tMULT         shift, and go to state 114
    tDIV          shift, and go to state 115
    tPLUS         shift, and go to state 116
    tMINUS        shift, and go to state 117
    tAND          shift, and go to state 118
    tOR           shift, and go to state 119
    tMOD          shift, and go to state 120
    tXOR          shift, and go to state 121
    tCLOSE_PAREN  shift, and go to state 170
    tEQ_EQ        shift, and go to state 122
    tNOT_EQUALS   shift, and go to state 123
    tLOGICAL_AND  shift, and go to state 124
    tLOGICAL_OR   shift, and go to state 125
    tLT           shift, and go to state 126
    tGT           shift, and go to state 127
    tLT_EQ        shift, and go to state 128
    tGT_EQ        shift, and go to state 129
    tSHIFT_LEFT   shift, and go to state 130
    tSHIFT_RIGHT  shift, and go to state 131
    tAMP_XOR      shift, and go to state 132


State 107

  145 typecasting: tINT tOPEN_PAREN . expr tCLOSE_PAREN

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    expr               go to state 171
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 108

  146 typecasting: tFLOAT tOPEN_PAREN . expr tCLOSE_PAREN

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    expr               go to state 172
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 109

  147 typecasting: tBOOLEAN tOPEN_PAREN . expr tCLOSE_PAREN

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    expr               go to state 173
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 110

  148 typecasting: tRUNE tOPEN_PAREN . expr tCLOSE_PAREN

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    expr               go to state 174
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 111

  156 struct_selector: tIDENTIFIER tPERIOD . tIDENTIFIER

    tIDENTIFIER  shift, and go to state 175


State 112

  143 function_call: tIDENTIFIER tOPEN_PAREN . exprlist tCLOSE_PAREN
  144              | tIDENTIFIER tOPEN_PAREN . tCLOSE_PAREN

    tAPPEND       shift, and go to state 66
    tPLUS         shift, and go to state 67
    tMINUS        shift, and go to state 68
    tXOR          shift, and go to state 69
    tNOT          shift, and go to state 70
    tOPEN_PAREN   shift, and go to state 71
    tCLOSE_PAREN  shift, and go to state 176
    tINT          shift, and go to state 72
    tFLOAT        shift, and go to state 73
    tBOOLEAN      shift, and go to state 74
    tRUNE         shift, and go to state 75
    tINTVAL       shift, and go to state 76
    tFLOATVAL     shift, and go to state 77
    tSTRINGVAL    shift, and go to state 78
    tRAWSTRVAL    shift, and go to state 79
    tIDENTIFIER   shift, and go to state 80
    tRUNEVAL      shift, and go to state 81

    exprlist           go to state 177
    expr               go to state 83
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 113

  102 exprlist: exprlist tCOMMA . expr

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    expr               go to state 178
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 114

  105 expr: expr tMULT . expr

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    expr               go to state 179
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 115

  106 expr: expr tDIV . expr

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    expr               go to state 180
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 116

  103 expr: expr tPLUS . expr

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    expr               go to state 181
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 117

  104 expr: expr tMINUS . expr

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    expr               go to state 182
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 118

  116 expr: expr tAND . expr

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    expr               go to state 183
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 119

  118 expr: expr tOR . expr

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    expr               go to state 184
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 120

  107 expr: expr tMOD . expr

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    expr               go to state 185
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 121

  119 expr: expr tXOR . expr

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    expr               go to state 186
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 122

  112 expr: expr tEQ_EQ . expr

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    expr               go to state 187
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 123

  113 expr: expr tNOT_EQUALS . expr

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    expr               go to state 188
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 124

  120 expr: expr tLOGICAL_AND . expr

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    expr               go to state 189
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 125

  121 expr: expr tLOGICAL_OR . expr

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    expr               go to state 190
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 126

  108 expr: expr tLT . expr

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    expr               go to state 191
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 127

  110 expr: expr tGT . expr

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    expr               go to state 192
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 128

  109 expr: expr tLT_EQ . expr

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    expr               go to state 193
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 129

  111 expr: expr tGT_EQ . expr

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    expr               go to state 194
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 130

  115 expr: expr tSHIFT_LEFT . expr

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    expr               go to state 195
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 131

  114 expr: expr tSHIFT_RIGHT . expr

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    expr               go to state 196
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 132

  117 expr: expr tAMP_XOR . expr

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    expr               go to state 197
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 133

  103 expr: expr . tPLUS expr
  104     | expr . tMINUS expr
  105     | expr . tMULT expr
  106     | expr . tDIV expr
  107     | expr . tMOD expr
  108     | expr . tLT expr
  109     | expr . tLT_EQ expr
  110     | expr . tGT expr
  111     | expr . tGT_EQ expr
  112     | expr . tEQ_EQ expr
  113     | expr . tNOT_EQUALS expr
  114     | expr . tSHIFT_RIGHT expr
  115     | expr . tSHIFT_LEFT expr
  116     | expr . tAND expr
  117     | expr . tAMP_XOR expr
  118     | expr . tOR expr
  119     | expr . tXOR expr
  120     | expr . tLOGICAL_AND expr
  121     | expr . tLOGICAL_OR expr
  122     | unary_op expr .

    $default  reduce using rule 122 (expr)


State 134

  149 array_index: tOPEN_SQ . expr tCLOSE_SQ
  150 slice_range: tOPEN_SQ . expr tCOLON expr tCLOSE_SQ
  151            | tOPEN_SQ . tCOLON expr tCLOSE_SQ
  152            | tOPEN_SQ . expr tCOLON tCLOSE_SQ
  153            | tOPEN_SQ . tCOLON tCLOSE_SQ
  154            | tOPEN_SQ . expr tCOLON expr tCOLON expr tCLOSE_SQ
  155            | tOPEN_SQ . tCOLON expr tCOLON expr tCLOSE_SQ

    tAPPEND      shift, and go to state 66
    tCOLON       shift, and go to state 198
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    expr               go to state 199
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 135

  133 other_expressions: other_expressions array_index .

    $default  reduce using rule 133 (other_expressions)


State 136

  134 other_expressions: other_expressions slice_range .

    $default  reduce using rule 134 (other_expressions)


State 137

   13 vars: idlist type tASSIGN exprlist .
  102 exprlist: exprlist . tCOMMA expr

    tCOMMA  shift, and go to state 113

    $default  reduce using rule 13 (vars)


State 138

   47 parameter_list: parameter_list tCOMMA parameter .

    $default  reduce using rule 47 (parameter_list)


State 139

   91 break_stmt: tBREAK . tSEMICOLON

    tSEMICOLON  shift, and go to state 200


State 140

   83 switch_stmt: tSWITCH . switch_condition tOPEN_BRACE caselist tCLOSE_BRACE

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    $default  reduce using rule 87 (switch_condition)

    switch_condition     go to state 201
    simple_stmt          go to state 202
    simple_stmt_no_semi  go to state 160
    assignment_stmt      go to state 161
    shortDcl             go to state 162
    exprlist             go to state 163
    expr                 go to state 203
    unary_op             go to state 84
    append_expr          go to state 85
    other_expressions    go to state 86
    operand              go to state 87
    function_call        go to state 88
    typecasting          go to state 89
    struct_selector      go to state 90


State 141

   72 if_stmt: tIF . if_condition block
   73        | tIF . if_condition simple_block tELSE else_block

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    if_condition         go to state 204
    simple_stmt          go to state 205
    simple_stmt_no_semi  go to state 160
    assignment_stmt      go to state 161
    shortDcl             go to state 162
    exprlist             go to state 163
    expr                 go to state 206
    unary_op             go to state 84
    append_expr          go to state 85
    other_expressions    go to state 86
    operand              go to state 87
    function_call        go to state 88
    typecasting          go to state 89
    struct_selector      go to state 90


State 142

   92 continue_stmt: tCONTINUE . tSEMICOLON

    tSEMICOLON  shift, and go to state 207


State 143

   78 for_stmt: tFOR . for_condition block

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    $default  reduce using rule 82 (condition)

    for_condition        go to state 208
    condition            go to state 209
    simple_stmt_no_semi  go to state 210
    assignment_stmt      go to state 161
    shortDcl             go to state 162
    exprlist             go to state 163
    expr                 go to state 211
    unary_op             go to state 84
    append_expr          go to state 85
    other_expressions    go to state 86
    operand              go to state 87
    function_call        go to state 88
    typecasting          go to state 89
    struct_selector      go to state 90


State 144

   70 return_stmt: tRETURN . expr tSEMICOLON
   71            | tRETURN . tSEMICOLON

    tAPPEND      shift, and go to state 66
    tSEMICOLON   shift, and go to state 212
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    expr               go to state 213
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 145

   66 print_stmt: tPRINT . tOPEN_PAREN exprlist tCLOSE_PAREN tSEMICOLON
   67           | tPRINT . tOPEN_PAREN tCLOSE_PAREN tSEMICOLON

    tOPEN_PAREN  shift, and go to state 214


State 146

   68 println_stmt: tPRINTLN . tOPEN_PAREN exprlist tCLOSE_PAREN tSEMICOLON
   69             | tPRINTLN . tOPEN_PAREN tCLOSE_PAREN tSEMICOLON

    tOPEN_PAREN  shift, and go to state 215


State 147

   52 simple_block: tOPEN_BRACE statement_list tCLOSE_BRACE .

    $default  reduce using rule 52 (simple_block)


State 148

   55 statement: dcl .

    $default  reduce using rule 55 (statement)


State 149

   56 statement: block .

    $default  reduce using rule 56 (statement)


State 150

   53 statement_list: statement_list statement .

    $default  reduce using rule 53 (statement_list)


State 151

   57 statement: print_stmt .

    $default  reduce using rule 57 (statement)


State 152

   58 statement: println_stmt .

    $default  reduce using rule 58 (statement)


State 153

   59 statement: return_stmt .

    $default  reduce using rule 59 (statement)


State 154

   60 statement: if_stmt .

    $default  reduce using rule 60 (statement)


State 155

   61 statement: for_stmt .

    $default  reduce using rule 61 (statement)


State 156

   62 statement: switch_stmt .

    $default  reduce using rule 62 (statement)


State 157

   63 statement: break_stmt .

    $default  reduce using rule 63 (statement)


State 158

   64 statement: continue_stmt .

    $default  reduce using rule 64 (statement)


State 159

   65 statement: simple_stmt .

    $default  reduce using rule 65 (statement)


State 160

   93 simple_stmt: simple_stmt_no_semi . tSEMICOLON

    tSEMICOLON  shift, and go to state 216


State 161

   97 simple_stmt_no_semi: assignment_stmt .

    $default  reduce using rule 97 (simple_stmt_no_semi)


State 162

   98 simple_stmt_no_semi: shortDcl .

    $default  reduce using rule 98 (simple_stmt_no_semi)


State 163

   99 assignment_stmt: exprlist . assign exprlist
  100 shortDcl: exprlist . tDECL exprlist
  102 exprlist: exprlist . tCOMMA expr

    tCOMMA           shift, and go to state 113
    tASSIGN          shift, and go to state 217
    tDECL            shift, and go to state 218
    tPLUS_EQ         shift, and go to state 219
    tAMP_EQ          shift, and go to state 220
    tMINUS_EQ        shift, and go to state 221
    tMOD_EQ          shift, and go to state 222
    tMULT_EQ         shift, and go to state 223
    tDIV_EQ          shift, and go to state 224
    tOR_EQ           shift, and go to state 225
    tXOR_EQ          shift, and go to state 226
    tSHIFT_LEFT_EQ   shift, and go to state 227
    tSHIFT_RIGHT_EQ  shift, and go to state 228
    tAMP_XOR_EQ      shift, and go to state 229

    assign  go to state 230


State 164

   94 simple_stmt_no_semi: expr .
   95                    | expr . tINC
   96                    | expr . tDEC
  101 exprlist: expr .
  103 expr: expr . tPLUS expr
  104     | expr . tMINUS expr
  105     | expr . tMULT expr
  106     | expr . tDIV expr
  107     | expr . tMOD expr
  108     | expr . tLT expr
  109     | expr . tLT_EQ expr
  110     | expr . tGT expr
  111     | expr . tGT_EQ expr
  112     | expr . tEQ_EQ expr
  113     | expr . tNOT_EQUALS expr
  114     | expr . tSHIFT_RIGHT expr
  115     | expr . tSHIFT_LEFT expr
  116     | expr . tAND expr
  117     | expr . tAMP_XOR expr
  118     | expr . tOR expr
  119     | expr . tXOR expr
  120     | expr . tLOGICAL_AND expr
  121     | expr . tLOGICAL_OR expr

    tMULT         shift, and go to state 114
    tDIV          shift, and go to state 115
    tPLUS         shift, and go to state 116
    tMINUS        shift, and go to state 117
    tAND          shift, and go to state 118
    tOR           shift, and go to state 119
    tMOD          shift, and go to state 120
    tXOR          shift, and go to state 121
    tEQ_EQ        shift, and go to state 122
    tNOT_EQUALS   shift, and go to state 123
    tLOGICAL_AND  shift, and go to state 124
    tLOGICAL_OR   shift, and go to state 125
    tLT           shift, and go to state 126
    tGT           shift, and go to state 127
    tLT_EQ        shift, and go to state 128
    tGT_EQ        shift, and go to state 129
    tSHIFT_LEFT   shift, and go to state 130
    tSHIFT_RIGHT  shift, and go to state 131
    tINC          shift, and go to state 231
    tDEC          shift, and go to state 232
    tAMP_XOR      shift, and go to state 132

    tSEMICOLON   reduce using rule 94 (simple_stmt_no_semi)
    tOPEN_BRACE  reduce using rule 94 (simple_stmt_no_semi)
    $default     reduce using rule 101 (exprlist)


State 165

   31 type: tSTRUCT tOPEN_BRACE memberlist tCLOSE_BRACE .

    $default  reduce using rule 31 (type)


State 166

   35 member: idlist . type

    tSTRUCT      shift, and go to state 35
    tOPEN_SQ     shift, and go to state 36
    tINT         shift, and go to state 37
    tFLOAT       shift, and go to state 38
    tSTRING      shift, and go to state 39
    tBOOLEAN     shift, and go to state 40
    tRUNE        shift, and go to state 41
    tIDENTIFIER  shift, and go to state 42

    type  go to state 233


State 167

   33 memberlist: memberlist member .

    $default  reduce using rule 33 (memberlist)


State 168

   30 type: tOPEN_SQ tINTVAL tCLOSE_SQ type .

    $default  reduce using rule 30 (type)


State 169

  129 append_expr: tAPPEND tOPEN_PAREN tIDENTIFIER . tCOMMA exprlist tCLOSE_PAREN

    tCOMMA  shift, and go to state 234


State 170

  136 operand: tOPEN_PAREN expr tCLOSE_PAREN .

    $default  reduce using rule 136 (operand)


State 171

  103 expr: expr . tPLUS expr
  104     | expr . tMINUS expr
  105     | expr . tMULT expr
  106     | expr . tDIV expr
  107     | expr . tMOD expr
  108     | expr . tLT expr
  109     | expr . tLT_EQ expr
  110     | expr . tGT expr
  111     | expr . tGT_EQ expr
  112     | expr . tEQ_EQ expr
  113     | expr . tNOT_EQUALS expr
  114     | expr . tSHIFT_RIGHT expr
  115     | expr . tSHIFT_LEFT expr
  116     | expr . tAND expr
  117     | expr . tAMP_XOR expr
  118     | expr . tOR expr
  119     | expr . tXOR expr
  120     | expr . tLOGICAL_AND expr
  121     | expr . tLOGICAL_OR expr
  145 typecasting: tINT tOPEN_PAREN expr . tCLOSE_PAREN

    tMULT         shift, and go to state 114
    tDIV          shift, and go to state 115
    tPLUS         shift, and go to state 116
    tMINUS        shift, and go to state 117
    tAND          shift, and go to state 118
    tOR           shift, and go to state 119
    tMOD          shift, and go to state 120
    tXOR          shift, and go to state 121
    tCLOSE_PAREN  shift, and go to state 235
    tEQ_EQ        shift, and go to state 122
    tNOT_EQUALS   shift, and go to state 123
    tLOGICAL_AND  shift, and go to state 124
    tLOGICAL_OR   shift, and go to state 125
    tLT           shift, and go to state 126
    tGT           shift, and go to state 127
    tLT_EQ        shift, and go to state 128
    tGT_EQ        shift, and go to state 129
    tSHIFT_LEFT   shift, and go to state 130
    tSHIFT_RIGHT  shift, and go to state 131
    tAMP_XOR      shift, and go to state 132


State 172

  103 expr: expr . tPLUS expr
  104     | expr . tMINUS expr
  105     | expr . tMULT expr
  106     | expr . tDIV expr
  107     | expr . tMOD expr
  108     | expr . tLT expr
  109     | expr . tLT_EQ expr
  110     | expr . tGT expr
  111     | expr . tGT_EQ expr
  112     | expr . tEQ_EQ expr
  113     | expr . tNOT_EQUALS expr
  114     | expr . tSHIFT_RIGHT expr
  115     | expr . tSHIFT_LEFT expr
  116     | expr . tAND expr
  117     | expr . tAMP_XOR expr
  118     | expr . tOR expr
  119     | expr . tXOR expr
  120     | expr . tLOGICAL_AND expr
  121     | expr . tLOGICAL_OR expr
  146 typecasting: tFLOAT tOPEN_PAREN expr . tCLOSE_PAREN

    tMULT         shift, and go to state 114
    tDIV          shift, and go to state 115
    tPLUS         shift, and go to state 116
    tMINUS        shift, and go to state 117
    tAND          shift, and go to state 118
    tOR           shift, and go to state 119
    tMOD          shift, and go to state 120
    tXOR          shift, and go to state 121
    tCLOSE_PAREN  shift, and go to state 236
    tEQ_EQ        shift, and go to state 122
    tNOT_EQUALS   shift, and go to state 123
    tLOGICAL_AND  shift, and go to state 124
    tLOGICAL_OR   shift, and go to state 125
    tLT           shift, and go to state 126
    tGT           shift, and go to state 127
    tLT_EQ        shift, and go to state 128
    tGT_EQ        shift, and go to state 129
    tSHIFT_LEFT   shift, and go to state 130
    tSHIFT_RIGHT  shift, and go to state 131
    tAMP_XOR      shift, and go to state 132


State 173

  103 expr: expr . tPLUS expr
  104     | expr . tMINUS expr
  105     | expr . tMULT expr
  106     | expr . tDIV expr
  107     | expr . tMOD expr
  108     | expr . tLT expr
  109     | expr . tLT_EQ expr
  110     | expr . tGT expr
  111     | expr . tGT_EQ expr
  112     | expr . tEQ_EQ expr
  113     | expr . tNOT_EQUALS expr
  114     | expr . tSHIFT_RIGHT expr
  115     | expr . tSHIFT_LEFT expr
  116     | expr . tAND expr
  117     | expr . tAMP_XOR expr
  118     | expr . tOR expr
  119     | expr . tXOR expr
  120     | expr . tLOGICAL_AND expr
  121     | expr . tLOGICAL_OR expr
  147 typecasting: tBOOLEAN tOPEN_PAREN expr . tCLOSE_PAREN

    tMULT         shift, and go to state 114
    tDIV          shift, and go to state 115
    tPLUS         shift, and go to state 116
    tMINUS        shift, and go to state 117
    tAND          shift, and go to state 118
    tOR           shift, and go to state 119
    tMOD          shift, and go to state 120
    tXOR          shift, and go to state 121
    tCLOSE_PAREN  shift, and go to state 237
    tEQ_EQ        shift, and go to state 122
    tNOT_EQUALS   shift, and go to state 123
    tLOGICAL_AND  shift, and go to state 124
    tLOGICAL_OR   shift, and go to state 125
    tLT           shift, and go to state 126
    tGT           shift, and go to state 127
    tLT_EQ        shift, and go to state 128
    tGT_EQ        shift, and go to state 129
    tSHIFT_LEFT   shift, and go to state 130
    tSHIFT_RIGHT  shift, and go to state 131
    tAMP_XOR      shift, and go to state 132


State 174

  103 expr: expr . tPLUS expr
  104     | expr . tMINUS expr
  105     | expr . tMULT expr
  106     | expr . tDIV expr
  107     | expr . tMOD expr
  108     | expr . tLT expr
  109     | expr . tLT_EQ expr
  110     | expr . tGT expr
  111     | expr . tGT_EQ expr
  112     | expr . tEQ_EQ expr
  113     | expr . tNOT_EQUALS expr
  114     | expr . tSHIFT_RIGHT expr
  115     | expr . tSHIFT_LEFT expr
  116     | expr . tAND expr
  117     | expr . tAMP_XOR expr
  118     | expr . tOR expr
  119     | expr . tXOR expr
  120     | expr . tLOGICAL_AND expr
  121     | expr . tLOGICAL_OR expr
  148 typecasting: tRUNE tOPEN_PAREN expr . tCLOSE_PAREN

    tMULT         shift, and go to state 114
    tDIV          shift, and go to state 115
    tPLUS         shift, and go to state 116
    tMINUS        shift, and go to state 117
    tAND          shift, and go to state 118
    tOR           shift, and go to state 119
    tMOD          shift, and go to state 120
    tXOR          shift, and go to state 121
    tCLOSE_PAREN  shift, and go to state 238
    tEQ_EQ        shift, and go to state 122
    tNOT_EQUALS   shift, and go to state 123
    tLOGICAL_AND  shift, and go to state 124
    tLOGICAL_OR   shift, and go to state 125
    tLT           shift, and go to state 126
    tGT           shift, and go to state 127
    tLT_EQ        shift, and go to state 128
    tGT_EQ        shift, and go to state 129
    tSHIFT_LEFT   shift, and go to state 130
    tSHIFT_RIGHT  shift, and go to state 131
    tAMP_XOR      shift, and go to state 132


State 175

  156 struct_selector: tIDENTIFIER tPERIOD tIDENTIFIER .

    $default  reduce using rule 156 (struct_selector)


State 176

  144 function_call: tIDENTIFIER tOPEN_PAREN tCLOSE_PAREN .

    $default  reduce using rule 144 (function_call)


State 177

  102 exprlist: exprlist . tCOMMA expr
  143 function_call: tIDENTIFIER tOPEN_PAREN exprlist . tCLOSE_PAREN

    tCOMMA        shift, and go to state 113
    tCLOSE_PAREN  shift, and go to state 239


State 178

  102 exprlist: exprlist tCOMMA expr .
  103 expr: expr . tPLUS expr
  104     | expr . tMINUS expr
  105     | expr . tMULT expr
  106     | expr . tDIV expr
  107     | expr . tMOD expr
  108     | expr . tLT expr
  109     | expr . tLT_EQ expr
  110     | expr . tGT expr
  111     | expr . tGT_EQ expr
  112     | expr . tEQ_EQ expr
  113     | expr . tNOT_EQUALS expr
  114     | expr . tSHIFT_RIGHT expr
  115     | expr . tSHIFT_LEFT expr
  116     | expr . tAND expr
  117     | expr . tAMP_XOR expr
  118     | expr . tOR expr
  119     | expr . tXOR expr
  120     | expr . tLOGICAL_AND expr
  121     | expr . tLOGICAL_OR expr

    tMULT         shift, and go to state 114
    tDIV          shift, and go to state 115
    tPLUS         shift, and go to state 116
    tMINUS        shift, and go to state 117
    tAND          shift, and go to state 118
    tOR           shift, and go to state 119
    tMOD          shift, and go to state 120
    tXOR          shift, and go to state 121
    tEQ_EQ        shift, and go to state 122
    tNOT_EQUALS   shift, and go to state 123
    tLOGICAL_AND  shift, and go to state 124
    tLOGICAL_OR   shift, and go to state 125
    tLT           shift, and go to state 126
    tGT           shift, and go to state 127
    tLT_EQ        shift, and go to state 128
    tGT_EQ        shift, and go to state 129
    tSHIFT_LEFT   shift, and go to state 130
    tSHIFT_RIGHT  shift, and go to state 131
    tAMP_XOR      shift, and go to state 132

    $default  reduce using rule 102 (exprlist)


State 179

  103 expr: expr . tPLUS expr
  104     | expr . tMINUS expr
  105     | expr . tMULT expr
  105     | expr tMULT expr .
  106     | expr . tDIV expr
  107     | expr . tMOD expr
  108     | expr . tLT expr
  109     | expr . tLT_EQ expr
  110     | expr . tGT expr
  111     | expr . tGT_EQ expr
  112     | expr . tEQ_EQ expr
  113     | expr . tNOT_EQUALS expr
  114     | expr . tSHIFT_RIGHT expr
  115     | expr . tSHIFT_LEFT expr
  116     | expr . tAND expr
  117     | expr . tAMP_XOR expr
  118     | expr . tOR expr
  119     | expr . tXOR expr
  120     | expr . tLOGICAL_AND expr
  121     | expr . tLOGICAL_OR expr

    $default  reduce using rule 105 (expr)


State 180

  103 expr: expr . tPLUS expr
  104     | expr . tMINUS expr
  105     | expr . tMULT expr
  106     | expr . tDIV expr
  106     | expr tDIV expr .
  107     | expr . tMOD expr
  108     | expr . tLT expr
  109     | expr . tLT_EQ expr
  110     | expr . tGT expr
  111     | expr . tGT_EQ expr
  112     | expr . tEQ_EQ expr
  113     | expr . tNOT_EQUALS expr
  114     | expr . tSHIFT_RIGHT expr
  115     | expr . tSHIFT_LEFT expr
  116     | expr . tAND expr
  117     | expr . tAMP_XOR expr
  118     | expr . tOR expr
  119     | expr . tXOR expr
  120     | expr . tLOGICAL_AND expr
  121     | expr . tLOGICAL_OR expr

    $default  reduce using rule 106 (expr)


State 181

  103 expr: expr . tPLUS expr
  103     | expr tPLUS expr .
  104     | expr . tMINUS expr
  105     | expr . tMULT expr
  106     | expr . tDIV expr
  107     | expr . tMOD expr
  108     | expr . tLT expr
  109     | expr . tLT_EQ expr
  110     | expr . tGT expr
  111     | expr . tGT_EQ expr
  112     | expr . tEQ_EQ expr
  113     | expr . tNOT_EQUALS expr
  114     | expr . tSHIFT_RIGHT expr
  115     | expr . tSHIFT_LEFT expr
  116     | expr . tAND expr
  117     | expr . tAMP_XOR expr
  118     | expr . tOR expr
  119     | expr . tXOR expr
  120     | expr . tLOGICAL_AND expr
  121     | expr . tLOGICAL_OR expr

    tMULT         shift, and go to state 114
    tDIV          shift, and go to state 115
    tAND          shift, and go to state 118
    tMOD          shift, and go to state 120
    tSHIFT_LEFT   shift, and go to state 130
    tSHIFT_RIGHT  shift, and go to state 131
    tAMP_XOR      shift, and go to state 132

    $default  reduce using rule 103 (expr)


State 182

  103 expr: expr . tPLUS expr
  104     | expr . tMINUS expr
  104     | expr tMINUS expr .
  105     | expr . tMULT expr
  106     | expr . tDIV expr
  107     | expr . tMOD expr
  108     | expr . tLT expr
  109     | expr . tLT_EQ expr
  110     | expr . tGT expr
  111     | expr . tGT_EQ expr
  112     | expr . tEQ_EQ expr
  113     | expr . tNOT_EQUALS expr
  114     | expr . tSHIFT_RIGHT expr
  115     | expr . tSHIFT_LEFT expr
  116     | expr . tAND expr
  117     | expr . tAMP_XOR expr
  118     | expr . tOR expr
  119     | expr . tXOR expr
  120     | expr . tLOGICAL_AND expr
  121     | expr . tLOGICAL_OR expr

    tMULT         shift, and go to state 114
    tDIV          shift, and go to state 115
    tAND          shift, and go to state 118
    tMOD          shift, and go to state 120
    tSHIFT_LEFT   shift, and go to state 130
    tSHIFT_RIGHT  shift, and go to state 131
    tAMP_XOR      shift, and go to state 132

    $default  reduce using rule 104 (expr)


State 183

  103 expr: expr . tPLUS expr
  104     | expr . tMINUS expr
  105     | expr . tMULT expr
  106     | expr . tDIV expr
  107     | expr . tMOD expr
  108     | expr . tLT expr
  109     | expr . tLT_EQ expr
  110     | expr . tGT expr
  111     | expr . tGT_EQ expr
  112     | expr . tEQ_EQ expr
  113     | expr . tNOT_EQUALS expr
  114     | expr . tSHIFT_RIGHT expr
  115     | expr . tSHIFT_LEFT expr
  116     | expr . tAND expr
  116     | expr tAND expr .
  117     | expr . tAMP_XOR expr
  118     | expr . tOR expr
  119     | expr . tXOR expr
  120     | expr . tLOGICAL_AND expr
  121     | expr . tLOGICAL_OR expr

    $default  reduce using rule 116 (expr)


State 184

  103 expr: expr . tPLUS expr
  104     | expr . tMINUS expr
  105     | expr . tMULT expr
  106     | expr . tDIV expr
  107     | expr . tMOD expr
  108     | expr . tLT expr
  109     | expr . tLT_EQ expr
  110     | expr . tGT expr
  111     | expr . tGT_EQ expr
  112     | expr . tEQ_EQ expr
  113     | expr . tNOT_EQUALS expr
  114     | expr . tSHIFT_RIGHT expr
  115     | expr . tSHIFT_LEFT expr
  116     | expr . tAND expr
  117     | expr . tAMP_XOR expr
  118     | expr . tOR expr
  118     | expr tOR expr .
  119     | expr . tXOR expr
  120     | expr . tLOGICAL_AND expr
  121     | expr . tLOGICAL_OR expr

    tMULT         shift, and go to state 114
    tDIV          shift, and go to state 115
    tAND          shift, and go to state 118
    tMOD          shift, and go to state 120
    tSHIFT_LEFT   shift, and go to state 130
    tSHIFT_RIGHT  shift, and go to state 131
    tAMP_XOR      shift, and go to state 132

    $default  reduce using rule 118 (expr)


State 185

  103 expr: expr . tPLUS expr
  104     | expr . tMINUS expr
  105     | expr . tMULT expr
  106     | expr . tDIV expr
  107     | expr . tMOD expr
  107     | expr tMOD expr .
  108     | expr . tLT expr
  109     | expr . tLT_EQ expr
  110     | expr . tGT expr
  111     | expr . tGT_EQ expr
  112     | expr . tEQ_EQ expr
  113     | expr . tNOT_EQUALS expr
  114     | expr . tSHIFT_RIGHT expr
  115     | expr . tSHIFT_LEFT expr
  116     | expr . tAND expr
  117     | expr . tAMP_XOR expr
  118     | expr . tOR expr
  119     | expr . tXOR expr
  120     | expr . tLOGICAL_AND expr
  121     | expr . tLOGICAL_OR expr

    $default  reduce using rule 107 (expr)


State 186

  103 expr: expr . tPLUS expr
  104     | expr . tMINUS expr
  105     | expr . tMULT expr
  106     | expr . tDIV expr
  107     | expr . tMOD expr
  108     | expr . tLT expr
  109     | expr . tLT_EQ expr
  110     | expr . tGT expr
  111     | expr . tGT_EQ expr
  112     | expr . tEQ_EQ expr
  113     | expr . tNOT_EQUALS expr
  114     | expr . tSHIFT_RIGHT expr
  115     | expr . tSHIFT_LEFT expr
  116     | expr . tAND expr
  117     | expr . tAMP_XOR expr
  118     | expr . tOR expr
  119     | expr . tXOR expr
  119     | expr tXOR expr .
  120     | expr . tLOGICAL_AND expr
  121     | expr . tLOGICAL_OR expr

    tMULT         shift, and go to state 114
    tDIV          shift, and go to state 115
    tAND          shift, and go to state 118
    tMOD          shift, and go to state 120
    tSHIFT_LEFT   shift, and go to state 130
    tSHIFT_RIGHT  shift, and go to state 131
    tAMP_XOR      shift, and go to state 132

    $default  reduce using rule 119 (expr)


State 187

  103 expr: expr . tPLUS expr
  104     | expr . tMINUS expr
  105     | expr . tMULT expr
  106     | expr . tDIV expr
  107     | expr . tMOD expr
  108     | expr . tLT expr
  109     | expr . tLT_EQ expr
  110     | expr . tGT expr
  111     | expr . tGT_EQ expr
  112     | expr . tEQ_EQ expr
  112     | expr tEQ_EQ expr .
  113     | expr . tNOT_EQUALS expr
  114     | expr . tSHIFT_RIGHT expr
  115     | expr . tSHIFT_LEFT expr
  116     | expr . tAND expr
  117     | expr . tAMP_XOR expr
  118     | expr . tOR expr
  119     | expr . tXOR expr
  120     | expr . tLOGICAL_AND expr
  121     | expr . tLOGICAL_OR expr

    tMULT         shift, and go to state 114
    tDIV          shift, and go to state 115
    tPLUS         shift, and go to state 116
    tMINUS        shift, and go to state 117
    tAND          shift, and go to state 118
    tOR           shift, and go to state 119
    tMOD          shift, and go to state 120
    tXOR          shift, and go to state 121
    tSHIFT_LEFT   shift, and go to state 130
    tSHIFT_RIGHT  shift, and go to state 131
    tAMP_XOR      shift, and go to state 132

    $default  reduce using rule 112 (expr)


State 188

  103 expr: expr . tPLUS expr
  104     | expr . tMINUS expr
  105     | expr . tMULT expr
  106     | expr . tDIV expr
  107     | expr . tMOD expr
  108     | expr . tLT expr
  109     | expr . tLT_EQ expr
  110     | expr . tGT expr
  111     | expr . tGT_EQ expr
  112     | expr . tEQ_EQ expr
  113     | expr . tNOT_EQUALS expr
  113     | expr tNOT_EQUALS expr .
  114     | expr . tSHIFT_RIGHT expr
  115     | expr . tSHIFT_LEFT expr
  116     | expr . tAND expr
  117     | expr . tAMP_XOR expr
  118     | expr . tOR expr
  119     | expr . tXOR expr
  120     | expr . tLOGICAL_AND expr
  121     | expr . tLOGICAL_OR expr

    tMULT         shift, and go to state 114
    tDIV          shift, and go to state 115
    tPLUS         shift, and go to state 116
    tMINUS        shift, and go to state 117
    tAND          shift, and go to state 118
    tOR           shift, and go to state 119
    tMOD          shift, and go to state 120
    tXOR          shift, and go to state 121
    tSHIFT_LEFT   shift, and go to state 130
    tSHIFT_RIGHT  shift, and go to state 131
    tAMP_XOR      shift, and go to state 132

    $default  reduce using rule 113 (expr)


State 189

  103 expr: expr . tPLUS expr
  104     | expr . tMINUS expr
  105     | expr . tMULT expr
  106     | expr . tDIV expr
  107     | expr . tMOD expr
  108     | expr . tLT expr
  109     | expr . tLT_EQ expr
  110     | expr . tGT expr
  111     | expr . tGT_EQ expr
  112     | expr . tEQ_EQ expr
  113     | expr . tNOT_EQUALS expr
  114     | expr . tSHIFT_RIGHT expr
  115     | expr . tSHIFT_LEFT expr
  116     | expr . tAND expr
  117     | expr . tAMP_XOR expr
  118     | expr . tOR expr
  119     | expr . tXOR expr
  120     | expr . tLOGICAL_AND expr
  120     | expr tLOGICAL_AND expr .
  121     | expr . tLOGICAL_OR expr

    tMULT         shift, and go to state 114
    tDIV          shift, and go to state 115
    tPLUS         shift, and go to state 116
    tMINUS        shift, and go to state 117
    tAND          shift, and go to state 118
    tOR           shift, and go to state 119
    tMOD          shift, and go to state 120
    tXOR          shift, and go to state 121
    tEQ_EQ        shift, and go to state 122
    tNOT_EQUALS   shift, and go to state 123
    tLT           shift, and go to state 126
    tGT           shift, and go to state 127
    tLT_EQ        shift, and go to state 128
    tGT_EQ        shift, and go to state 129
    tSHIFT_LEFT   shift, and go to state 130
    tSHIFT_RIGHT  shift, and go to state 131
    tAMP_XOR      shift, and go to state 132

    $default  reduce using rule 120 (expr)


State 190

  103 expr: expr . tPLUS expr
  104     | expr . tMINUS expr
  105     | expr . tMULT expr
  106     | expr . tDIV expr
  107     | expr . tMOD expr
  108     | expr . tLT expr
  109     | expr . tLT_EQ expr
  110     | expr . tGT expr
  111     | expr . tGT_EQ expr
  112     | expr . tEQ_EQ expr
  113     | expr . tNOT_EQUALS expr
  114     | expr . tSHIFT_RIGHT expr
  115     | expr . tSHIFT_LEFT expr
  116     | expr . tAND expr
  117     | expr . tAMP_XOR expr
  118     | expr . tOR expr
  119     | expr . tXOR expr
  120     | expr . tLOGICAL_AND expr
  121     | expr . tLOGICAL_OR expr
  121     | expr tLOGICAL_OR expr .

    tMULT         shift, and go to state 114
    tDIV          shift, and go to state 115
    tPLUS         shift, and go to state 116
    tMINUS        shift, and go to state 117
    tAND          shift, and go to state 118
    tOR           shift, and go to state 119
    tMOD          shift, and go to state 120
    tXOR          shift, and go to state 121
    tEQ_EQ        shift, and go to state 122
    tNOT_EQUALS   shift, and go to state 123
    tLOGICAL_AND  shift, and go to state 124
    tLT           shift, and go to state 126
    tGT           shift, and go to state 127
    tLT_EQ        shift, and go to state 128
    tGT_EQ        shift, and go to state 129
    tSHIFT_LEFT   shift, and go to state 130
    tSHIFT_RIGHT  shift, and go to state 131
    tAMP_XOR      shift, and go to state 132

    $default  reduce using rule 121 (expr)


State 191

  103 expr: expr . tPLUS expr
  104     | expr . tMINUS expr
  105     | expr . tMULT expr
  106     | expr . tDIV expr
  107     | expr . tMOD expr
  108     | expr . tLT expr
  108     | expr tLT expr .
  109     | expr . tLT_EQ expr
  110     | expr . tGT expr
  111     | expr . tGT_EQ expr
  112     | expr . tEQ_EQ expr
  113     | expr . tNOT_EQUALS expr
  114     | expr . tSHIFT_RIGHT expr
  115     | expr . tSHIFT_LEFT expr
  116     | expr . tAND expr
  117     | expr . tAMP_XOR expr
  118     | expr . tOR expr
  119     | expr . tXOR expr
  120     | expr . tLOGICAL_AND expr
  121     | expr . tLOGICAL_OR expr

    tMULT         shift, and go to state 114
    tDIV          shift, and go to state 115
    tPLUS         shift, and go to state 116
    tMINUS        shift, and go to state 117
    tAND          shift, and go to state 118
    tOR           shift, and go to state 119
    tMOD          shift, and go to state 120
    tXOR          shift, and go to state 121
    tSHIFT_LEFT   shift, and go to state 130
    tSHIFT_RIGHT  shift, and go to state 131
    tAMP_XOR      shift, and go to state 132

    $default  reduce using rule 108 (expr)


State 192

  103 expr: expr . tPLUS expr
  104     | expr . tMINUS expr
  105     | expr . tMULT expr
  106     | expr . tDIV expr
  107     | expr . tMOD expr
  108     | expr . tLT expr
  109     | expr . tLT_EQ expr
  110     | expr . tGT expr
  110     | expr tGT expr .
  111     | expr . tGT_EQ expr
  112     | expr . tEQ_EQ expr
  113     | expr . tNOT_EQUALS expr
  114     | expr . tSHIFT_RIGHT expr
  115     | expr . tSHIFT_LEFT expr
  116     | expr . tAND expr
  117     | expr . tAMP_XOR expr
  118     | expr . tOR expr
  119     | expr . tXOR expr
  120     | expr . tLOGICAL_AND expr
  121     | expr . tLOGICAL_OR expr

    tMULT         shift, and go to state 114
    tDIV          shift, and go to state 115
    tPLUS         shift, and go to state 116
    tMINUS        shift, and go to state 117
    tAND          shift, and go to state 118
    tOR           shift, and go to state 119
    tMOD          shift, and go to state 120
    tXOR          shift, and go to state 121
    tSHIFT_LEFT   shift, and go to state 130
    tSHIFT_RIGHT  shift, and go to state 131
    tAMP_XOR      shift, and go to state 132

    $default  reduce using rule 110 (expr)


State 193

  103 expr: expr . tPLUS expr
  104     | expr . tMINUS expr
  105     | expr . tMULT expr
  106     | expr . tDIV expr
  107     | expr . tMOD expr
  108     | expr . tLT expr
  109     | expr . tLT_EQ expr
  109     | expr tLT_EQ expr .
  110     | expr . tGT expr
  111     | expr . tGT_EQ expr
  112     | expr . tEQ_EQ expr
  113     | expr . tNOT_EQUALS expr
  114     | expr . tSHIFT_RIGHT expr
  115     | expr . tSHIFT_LEFT expr
  116     | expr . tAND expr
  117     | expr . tAMP_XOR expr
  118     | expr . tOR expr
  119     | expr . tXOR expr
  120     | expr . tLOGICAL_AND expr
  121     | expr . tLOGICAL_OR expr

    tMULT         shift, and go to state 114
    tDIV          shift, and go to state 115
    tPLUS         shift, and go to state 116
    tMINUS        shift, and go to state 117
    tAND          shift, and go to state 118
    tOR           shift, and go to state 119
    tMOD          shift, and go to state 120
    tXOR          shift, and go to state 121
    tSHIFT_LEFT   shift, and go to state 130
    tSHIFT_RIGHT  shift, and go to state 131
    tAMP_XOR      shift, and go to state 132

    $default  reduce using rule 109 (expr)


State 194

  103 expr: expr . tPLUS expr
  104     | expr . tMINUS expr
  105     | expr . tMULT expr
  106     | expr . tDIV expr
  107     | expr . tMOD expr
  108     | expr . tLT expr
  109     | expr . tLT_EQ expr
  110     | expr . tGT expr
  111     | expr . tGT_EQ expr
  111     | expr tGT_EQ expr .
  112     | expr . tEQ_EQ expr
  113     | expr . tNOT_EQUALS expr
  114     | expr . tSHIFT_RIGHT expr
  115     | expr . tSHIFT_LEFT expr
  116     | expr . tAND expr
  117     | expr . tAMP_XOR expr
  118     | expr . tOR expr
  119     | expr . tXOR expr
  120     | expr . tLOGICAL_AND expr
  121     | expr . tLOGICAL_OR expr

    tMULT         shift, and go to state 114
    tDIV          shift, and go to state 115
    tPLUS         shift, and go to state 116
    tMINUS        shift, and go to state 117
    tAND          shift, and go to state 118
    tOR           shift, and go to state 119
    tMOD          shift, and go to state 120
    tXOR          shift, and go to state 121
    tSHIFT_LEFT   shift, and go to state 130
    tSHIFT_RIGHT  shift, and go to state 131
    tAMP_XOR      shift, and go to state 132

    $default  reduce using rule 111 (expr)


State 195

  103 expr: expr . tPLUS expr
  104     | expr . tMINUS expr
  105     | expr . tMULT expr
  106     | expr . tDIV expr
  107     | expr . tMOD expr
  108     | expr . tLT expr
  109     | expr . tLT_EQ expr
  110     | expr . tGT expr
  111     | expr . tGT_EQ expr
  112     | expr . tEQ_EQ expr
  113     | expr . tNOT_EQUALS expr
  114     | expr . tSHIFT_RIGHT expr
  115     | expr . tSHIFT_LEFT expr
  115     | expr tSHIFT_LEFT expr .
  116     | expr . tAND expr
  117     | expr . tAMP_XOR expr
  118     | expr . tOR expr
  119     | expr . tXOR expr
  120     | expr . tLOGICAL_AND expr
  121     | expr . tLOGICAL_OR expr

    $default  reduce using rule 115 (expr)


State 196

  103 expr: expr . tPLUS expr
  104     | expr . tMINUS expr
  105     | expr . tMULT expr
  106     | expr . tDIV expr
  107     | expr . tMOD expr
  108     | expr . tLT expr
  109     | expr . tLT_EQ expr
  110     | expr . tGT expr
  111     | expr . tGT_EQ expr
  112     | expr . tEQ_EQ expr
  113     | expr . tNOT_EQUALS expr
  114     | expr . tSHIFT_RIGHT expr
  114     | expr tSHIFT_RIGHT expr .
  115     | expr . tSHIFT_LEFT expr
  116     | expr . tAND expr
  117     | expr . tAMP_XOR expr
  118     | expr . tOR expr
  119     | expr . tXOR expr
  120     | expr . tLOGICAL_AND expr
  121     | expr . tLOGICAL_OR expr

    $default  reduce using rule 114 (expr)


State 197

  103 expr: expr . tPLUS expr
  104     | expr . tMINUS expr
  105     | expr . tMULT expr
  106     | expr . tDIV expr
  107     | expr . tMOD expr
  108     | expr . tLT expr
  109     | expr . tLT_EQ expr
  110     | expr . tGT expr
  111     | expr . tGT_EQ expr
  112     | expr . tEQ_EQ expr
  113     | expr . tNOT_EQUALS expr
  114     | expr . tSHIFT_RIGHT expr
  115     | expr . tSHIFT_LEFT expr
  116     | expr . tAND expr
  117     | expr . tAMP_XOR expr
  117     | expr tAMP_XOR expr .
  118     | expr . tOR expr
  119     | expr . tXOR expr
  120     | expr . tLOGICAL_AND expr
  121     | expr . tLOGICAL_OR expr

    $default  reduce using rule 117 (expr)


State 198

  151 slice_range: tOPEN_SQ tCOLON . expr tCLOSE_SQ
  153            | tOPEN_SQ tCOLON . tCLOSE_SQ
  155            | tOPEN_SQ tCOLON . expr tCOLON expr tCLOSE_SQ

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tCLOSE_SQ    shift, and go to state 240
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    expr               go to state 241
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 199

  103 expr: expr . tPLUS expr
  104     | expr . tMINUS expr
  105     | expr . tMULT expr
  106     | expr . tDIV expr
  107     | expr . tMOD expr
  108     | expr . tLT expr
  109     | expr . tLT_EQ expr
  110     | expr . tGT expr
  111     | expr . tGT_EQ expr
  112     | expr . tEQ_EQ expr
  113     | expr . tNOT_EQUALS expr
  114     | expr . tSHIFT_RIGHT expr
  115     | expr . tSHIFT_LEFT expr
  116     | expr . tAND expr
  117     | expr . tAMP_XOR expr
  118     | expr . tOR expr
  119     | expr . tXOR expr
  120     | expr . tLOGICAL_AND expr
  121     | expr . tLOGICAL_OR expr
  149 array_index: tOPEN_SQ expr . tCLOSE_SQ
  150 slice_range: tOPEN_SQ expr . tCOLON expr tCLOSE_SQ
  152            | tOPEN_SQ expr . tCOLON tCLOSE_SQ
  154            | tOPEN_SQ expr . tCOLON expr tCOLON expr tCLOSE_SQ

    tCOLON        shift, and go to state 242
    tMULT         shift, and go to state 114
    tDIV          shift, and go to state 115
    tPLUS         shift, and go to state 116
    tMINUS        shift, and go to state 117
    tAND          shift, and go to state 118
    tOR           shift, and go to state 119
    tMOD          shift, and go to state 120
    tXOR          shift, and go to state 121
    tCLOSE_SQ     shift, and go to state 243
    tEQ_EQ        shift, and go to state 122
    tNOT_EQUALS   shift, and go to state 123
    tLOGICAL_AND  shift, and go to state 124
    tLOGICAL_OR   shift, and go to state 125
    tLT           shift, and go to state 126
    tGT           shift, and go to state 127
    tLT_EQ        shift, and go to state 128
    tGT_EQ        shift, and go to state 129
    tSHIFT_LEFT   shift, and go to state 130
    tSHIFT_RIGHT  shift, and go to state 131
    tAMP_XOR      shift, and go to state 132


State 200

   91 break_stmt: tBREAK tSEMICOLON .

    $default  reduce using rule 91 (break_stmt)


State 201

   83 switch_stmt: tSWITCH switch_condition . tOPEN_BRACE caselist tCLOSE_BRACE

    tOPEN_BRACE  shift, and go to state 244


State 202

   84 switch_condition: simple_stmt .
   85                 | simple_stmt . expr

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    $default  reduce using rule 84 (switch_condition)

    expr               go to state 245
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 203

   86 switch_condition: expr .
   94 simple_stmt_no_semi: expr .
   95                    | expr . tINC
   96                    | expr . tDEC
  101 exprlist: expr .
  103 expr: expr . tPLUS expr
  104     | expr . tMINUS expr
  105     | expr . tMULT expr
  106     | expr . tDIV expr
  107     | expr . tMOD expr
  108     | expr . tLT expr
  109     | expr . tLT_EQ expr
  110     | expr . tGT expr
  111     | expr . tGT_EQ expr
  112     | expr . tEQ_EQ expr
  113     | expr . tNOT_EQUALS expr
  114     | expr . tSHIFT_RIGHT expr
  115     | expr . tSHIFT_LEFT expr
  116     | expr . tAND expr
  117     | expr . tAMP_XOR expr
  118     | expr . tOR expr
  119     | expr . tXOR expr
  120     | expr . tLOGICAL_AND expr
  121     | expr . tLOGICAL_OR expr

    tMULT         shift, and go to state 114
    tDIV          shift, and go to state 115
    tPLUS         shift, and go to state 116
    tMINUS        shift, and go to state 117
    tAND          shift, and go to state 118
    tOR           shift, and go to state 119
    tMOD          shift, and go to state 120
    tXOR          shift, and go to state 121
    tEQ_EQ        shift, and go to state 122
    tNOT_EQUALS   shift, and go to state 123
    tLOGICAL_AND  shift, and go to state 124
    tLOGICAL_OR   shift, and go to state 125
    tLT           shift, and go to state 126
    tGT           shift, and go to state 127
    tLT_EQ        shift, and go to state 128
    tGT_EQ        shift, and go to state 129
    tSHIFT_LEFT   shift, and go to state 130
    tSHIFT_RIGHT  shift, and go to state 131
    tINC          shift, and go to state 231
    tDEC          shift, and go to state 232
    tAMP_XOR      shift, and go to state 132

    tSEMICOLON   reduce using rule 94 (simple_stmt_no_semi)
    tOPEN_BRACE  reduce using rule 86 (switch_condition)
    $default     reduce using rule 101 (exprlist)


State 204

   72 if_stmt: tIF if_condition . block
   73        | tIF if_condition . simple_block tELSE else_block

    tOPEN_BRACE  shift, and go to state 54

    block         go to state 246
    simple_block  go to state 247


State 205

   74 if_condition: simple_stmt . expr

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    expr               go to state 248
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 206

   75 if_condition: expr .
   94 simple_stmt_no_semi: expr .
   95                    | expr . tINC
   96                    | expr . tDEC
  101 exprlist: expr .
  103 expr: expr . tPLUS expr
  104     | expr . tMINUS expr
  105     | expr . tMULT expr
  106     | expr . tDIV expr
  107     | expr . tMOD expr
  108     | expr . tLT expr
  109     | expr . tLT_EQ expr
  110     | expr . tGT expr
  111     | expr . tGT_EQ expr
  112     | expr . tEQ_EQ expr
  113     | expr . tNOT_EQUALS expr
  114     | expr . tSHIFT_RIGHT expr
  115     | expr . tSHIFT_LEFT expr
  116     | expr . tAND expr
  117     | expr . tAMP_XOR expr
  118     | expr . tOR expr
  119     | expr . tXOR expr
  120     | expr . tLOGICAL_AND expr
  121     | expr . tLOGICAL_OR expr

    tMULT         shift, and go to state 114
    tDIV          shift, and go to state 115
    tPLUS         shift, and go to state 116
    tMINUS        shift, and go to state 117
    tAND          shift, and go to state 118
    tOR           shift, and go to state 119
    tMOD          shift, and go to state 120
    tXOR          shift, and go to state 121
    tEQ_EQ        shift, and go to state 122
    tNOT_EQUALS   shift, and go to state 123
    tLOGICAL_AND  shift, and go to state 124
    tLOGICAL_OR   shift, and go to state 125
    tLT           shift, and go to state 126
    tGT           shift, and go to state 127
    tLT_EQ        shift, and go to state 128
    tGT_EQ        shift, and go to state 129
    tSHIFT_LEFT   shift, and go to state 130
    tSHIFT_RIGHT  shift, and go to state 131
    tINC          shift, and go to state 231
    tDEC          shift, and go to state 232
    tAMP_XOR      shift, and go to state 132

    tSEMICOLON   reduce using rule 94 (simple_stmt_no_semi)
    tOPEN_BRACE  reduce using rule 75 (if_condition)
    $default     reduce using rule 101 (exprlist)


State 207

   92 continue_stmt: tCONTINUE tSEMICOLON .

    $default  reduce using rule 92 (continue_stmt)


State 208

   78 for_stmt: tFOR for_condition . block

    tOPEN_BRACE  shift, and go to state 54

    block         go to state 249
    simple_block  go to state 57


State 209

   79 for_condition: condition .

    $default  reduce using rule 79 (for_condition)


State 210

   80 for_condition: simple_stmt_no_semi . tSEMICOLON condition tSEMICOLON simple_stmt_no_semi

    tSEMICOLON  shift, and go to state 250


State 211

   81 condition: expr .
   94 simple_stmt_no_semi: expr .
   95                    | expr . tINC
   96                    | expr . tDEC
  101 exprlist: expr .
  103 expr: expr . tPLUS expr
  104     | expr . tMINUS expr
  105     | expr . tMULT expr
  106     | expr . tDIV expr
  107     | expr . tMOD expr
  108     | expr . tLT expr
  109     | expr . tLT_EQ expr
  110     | expr . tGT expr
  111     | expr . tGT_EQ expr
  112     | expr . tEQ_EQ expr
  113     | expr . tNOT_EQUALS expr
  114     | expr . tSHIFT_RIGHT expr
  115     | expr . tSHIFT_LEFT expr
  116     | expr . tAND expr
  117     | expr . tAMP_XOR expr
  118     | expr . tOR expr
  119     | expr . tXOR expr
  120     | expr . tLOGICAL_AND expr
  121     | expr . tLOGICAL_OR expr

    tMULT         shift, and go to state 114
    tDIV          shift, and go to state 115
    tPLUS         shift, and go to state 116
    tMINUS        shift, and go to state 117
    tAND          shift, and go to state 118
    tOR           shift, and go to state 119
    tMOD          shift, and go to state 120
    tXOR          shift, and go to state 121
    tEQ_EQ        shift, and go to state 122
    tNOT_EQUALS   shift, and go to state 123
    tLOGICAL_AND  shift, and go to state 124
    tLOGICAL_OR   shift, and go to state 125
    tLT           shift, and go to state 126
    tGT           shift, and go to state 127
    tLT_EQ        shift, and go to state 128
    tGT_EQ        shift, and go to state 129
    tSHIFT_LEFT   shift, and go to state 130
    tSHIFT_RIGHT  shift, and go to state 131
    tINC          shift, and go to state 231
    tDEC          shift, and go to state 232
    tAMP_XOR      shift, and go to state 132

    tSEMICOLON   reduce using rule 94 (simple_stmt_no_semi)
    tOPEN_BRACE  reduce using rule 81 (condition)
    $default     reduce using rule 101 (exprlist)


State 212

   71 return_stmt: tRETURN tSEMICOLON .

    $default  reduce using rule 71 (return_stmt)


State 213

   70 return_stmt: tRETURN expr . tSEMICOLON
  103 expr: expr . tPLUS expr
  104     | expr . tMINUS expr
  105     | expr . tMULT expr
  106     | expr . tDIV expr
  107     | expr . tMOD expr
  108     | expr . tLT expr
  109     | expr . tLT_EQ expr
  110     | expr . tGT expr
  111     | expr . tGT_EQ expr
  112     | expr . tEQ_EQ expr
  113     | expr . tNOT_EQUALS expr
  114     | expr . tSHIFT_RIGHT expr
  115     | expr . tSHIFT_LEFT expr
  116     | expr . tAND expr
  117     | expr . tAMP_XOR expr
  118     | expr . tOR expr
  119     | expr . tXOR expr
  120     | expr . tLOGICAL_AND expr
  121     | expr . tLOGICAL_OR expr

    tSEMICOLON    shift, and go to state 251
    tMULT         shift, and go to state 114
    tDIV          shift, and go to state 115
    tPLUS         shift, and go to state 116
    tMINUS        shift, and go to state 117
    tAND          shift, and go to state 118
    tOR           shift, and go to state 119
    tMOD          shift, and go to state 120
    tXOR          shift, and go to state 121
    tEQ_EQ        shift, and go to state 122
    tNOT_EQUALS   shift, and go to state 123
    tLOGICAL_AND  shift, and go to state 124
    tLOGICAL_OR   shift, and go to state 125
    tLT           shift, and go to state 126
    tGT           shift, and go to state 127
    tLT_EQ        shift, and go to state 128
    tGT_EQ        shift, and go to state 129
    tSHIFT_LEFT   shift, and go to state 130
    tSHIFT_RIGHT  shift, and go to state 131
    tAMP_XOR      shift, and go to state 132


State 214

   66 print_stmt: tPRINT tOPEN_PAREN . exprlist tCLOSE_PAREN tSEMICOLON
   67           | tPRINT tOPEN_PAREN . tCLOSE_PAREN tSEMICOLON

    tAPPEND       shift, and go to state 66
    tPLUS         shift, and go to state 67
    tMINUS        shift, and go to state 68
    tXOR          shift, and go to state 69
    tNOT          shift, and go to state 70
    tOPEN_PAREN   shift, and go to state 71
    tCLOSE_PAREN  shift, and go to state 252
    tINT          shift, and go to state 72
    tFLOAT        shift, and go to state 73
    tBOOLEAN      shift, and go to state 74
    tRUNE         shift, and go to state 75
    tINTVAL       shift, and go to state 76
    tFLOATVAL     shift, and go to state 77
    tSTRINGVAL    shift, and go to state 78
    tRAWSTRVAL    shift, and go to state 79
    tIDENTIFIER   shift, and go to state 80
    tRUNEVAL      shift, and go to state 81

    exprlist           go to state 253
    expr               go to state 83
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 215

   68 println_stmt: tPRINTLN tOPEN_PAREN . exprlist tCLOSE_PAREN tSEMICOLON
   69             | tPRINTLN tOPEN_PAREN . tCLOSE_PAREN tSEMICOLON

    tAPPEND       shift, and go to state 66
    tPLUS         shift, and go to state 67
    tMINUS        shift, and go to state 68
    tXOR          shift, and go to state 69
    tNOT          shift, and go to state 70
    tOPEN_PAREN   shift, and go to state 71
    tCLOSE_PAREN  shift, and go to state 254
    tINT          shift, and go to state 72
    tFLOAT        shift, and go to state 73
    tBOOLEAN      shift, and go to state 74
    tRUNE         shift, and go to state 75
    tINTVAL       shift, and go to state 76
    tFLOATVAL     shift, and go to state 77
    tSTRINGVAL    shift, and go to state 78
    tRAWSTRVAL    shift, and go to state 79
    tIDENTIFIER   shift, and go to state 80
    tRUNEVAL      shift, and go to state 81

    exprlist           go to state 255
    expr               go to state 83
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 216

   93 simple_stmt: simple_stmt_no_semi tSEMICOLON .

    $default  reduce using rule 93 (simple_stmt)


State 217

  157 assign: tASSIGN .

    $default  reduce using rule 157 (assign)


State 218

  100 shortDcl: exprlist tDECL . exprlist

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    exprlist           go to state 256
    expr               go to state 83
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 219

  158 assign: tPLUS_EQ .

    $default  reduce using rule 158 (assign)


State 220

  163 assign: tAMP_EQ .

    $default  reduce using rule 163 (assign)


State 221

  159 assign: tMINUS_EQ .

    $default  reduce using rule 159 (assign)


State 222

  162 assign: tMOD_EQ .

    $default  reduce using rule 162 (assign)


State 223

  160 assign: tMULT_EQ .

    $default  reduce using rule 160 (assign)


State 224

  161 assign: tDIV_EQ .

    $default  reduce using rule 161 (assign)


State 225

  164 assign: tOR_EQ .

    $default  reduce using rule 164 (assign)


State 226

  165 assign: tXOR_EQ .

    $default  reduce using rule 165 (assign)


State 227

  166 assign: tSHIFT_LEFT_EQ .

    $default  reduce using rule 166 (assign)


State 228

  167 assign: tSHIFT_RIGHT_EQ .

    $default  reduce using rule 167 (assign)


State 229

  168 assign: tAMP_XOR_EQ .

    $default  reduce using rule 168 (assign)


State 230

   99 assignment_stmt: exprlist assign . exprlist

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    exprlist           go to state 257
    expr               go to state 83
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 231

   95 simple_stmt_no_semi: expr tINC .

    $default  reduce using rule 95 (simple_stmt_no_semi)


State 232

   96 simple_stmt_no_semi: expr tDEC .

    $default  reduce using rule 96 (simple_stmt_no_semi)


State 233

   35 member: idlist type .

    $default  reduce using rule 35 (member)


State 234

  129 append_expr: tAPPEND tOPEN_PAREN tIDENTIFIER tCOMMA . exprlist tCLOSE_PAREN

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    exprlist           go to state 258
    expr               go to state 83
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 235

  145 typecasting: tINT tOPEN_PAREN expr tCLOSE_PAREN .

    $default  reduce using rule 145 (typecasting)


State 236

  146 typecasting: tFLOAT tOPEN_PAREN expr tCLOSE_PAREN .

    $default  reduce using rule 146 (typecasting)


State 237

  147 typecasting: tBOOLEAN tOPEN_PAREN expr tCLOSE_PAREN .

    $default  reduce using rule 147 (typecasting)


State 238

  148 typecasting: tRUNE tOPEN_PAREN expr tCLOSE_PAREN .

    $default  reduce using rule 148 (typecasting)


State 239

  143 function_call: tIDENTIFIER tOPEN_PAREN exprlist tCLOSE_PAREN .

    $default  reduce using rule 143 (function_call)


State 240

  153 slice_range: tOPEN_SQ tCOLON tCLOSE_SQ .

    $default  reduce using rule 153 (slice_range)


State 241

  103 expr: expr . tPLUS expr
  104     | expr . tMINUS expr
  105     | expr . tMULT expr
  106     | expr . tDIV expr
  107     | expr . tMOD expr
  108     | expr . tLT expr
  109     | expr . tLT_EQ expr
  110     | expr . tGT expr
  111     | expr . tGT_EQ expr
  112     | expr . tEQ_EQ expr
  113     | expr . tNOT_EQUALS expr
  114     | expr . tSHIFT_RIGHT expr
  115     | expr . tSHIFT_LEFT expr
  116     | expr . tAND expr
  117     | expr . tAMP_XOR expr
  118     | expr . tOR expr
  119     | expr . tXOR expr
  120     | expr . tLOGICAL_AND expr
  121     | expr . tLOGICAL_OR expr
  151 slice_range: tOPEN_SQ tCOLON expr . tCLOSE_SQ
  155            | tOPEN_SQ tCOLON expr . tCOLON expr tCLOSE_SQ

    tCOLON        shift, and go to state 259
    tMULT         shift, and go to state 114
    tDIV          shift, and go to state 115
    tPLUS         shift, and go to state 116
    tMINUS        shift, and go to state 117
    tAND          shift, and go to state 118
    tOR           shift, and go to state 119
    tMOD          shift, and go to state 120
    tXOR          shift, and go to state 121
    tCLOSE_SQ     shift, and go to state 260
    tEQ_EQ        shift, and go to state 122
    tNOT_EQUALS   shift, and go to state 123
    tLOGICAL_AND  shift, and go to state 124
    tLOGICAL_OR   shift, and go to state 125
    tLT           shift, and go to state 126
    tGT           shift, and go to state 127
    tLT_EQ        shift, and go to state 128
    tGT_EQ        shift, and go to state 129
    tSHIFT_LEFT   shift, and go to state 130
    tSHIFT_RIGHT  shift, and go to state 131
    tAMP_XOR      shift, and go to state 132


State 242

  150 slice_range: tOPEN_SQ expr tCOLON . expr tCLOSE_SQ
  152            | tOPEN_SQ expr tCOLON . tCLOSE_SQ
  154            | tOPEN_SQ expr tCOLON . expr tCOLON expr tCLOSE_SQ

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tCLOSE_SQ    shift, and go to state 261
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    expr               go to state 262
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 243

  149 array_index: tOPEN_SQ expr tCLOSE_SQ .

    $default  reduce using rule 149 (array_index)


State 244

   83 switch_stmt: tSWITCH switch_condition tOPEN_BRACE . caselist tCLOSE_BRACE

    tDEFAULT  shift, and go to state 263
    tCASE     shift, and go to state 264

    caselist  go to state 265
    case      go to state 266


State 245

   85 switch_condition: simple_stmt expr .
  103 expr: expr . tPLUS expr
  104     | expr . tMINUS expr
  105     | expr . tMULT expr
  106     | expr . tDIV expr
  107     | expr . tMOD expr
  108     | expr . tLT expr
  109     | expr . tLT_EQ expr
  110     | expr . tGT expr
  111     | expr . tGT_EQ expr
  112     | expr . tEQ_EQ expr
  113     | expr . tNOT_EQUALS expr
  114     | expr . tSHIFT_RIGHT expr
  115     | expr . tSHIFT_LEFT expr
  116     | expr . tAND expr
  117     | expr . tAMP_XOR expr
  118     | expr . tOR expr
  119     | expr . tXOR expr
  120     | expr . tLOGICAL_AND expr
  121     | expr . tLOGICAL_OR expr

    tMULT         shift, and go to state 114
    tDIV          shift, and go to state 115
    tPLUS         shift, and go to state 116
    tMINUS        shift, and go to state 117
    tAND          shift, and go to state 118
    tOR           shift, and go to state 119
    tMOD          shift, and go to state 120
    tXOR          shift, and go to state 121
    tEQ_EQ        shift, and go to state 122
    tNOT_EQUALS   shift, and go to state 123
    tLOGICAL_AND  shift, and go to state 124
    tLOGICAL_OR   shift, and go to state 125
    tLT           shift, and go to state 126
    tGT           shift, and go to state 127
    tLT_EQ        shift, and go to state 128
    tGT_EQ        shift, and go to state 129
    tSHIFT_LEFT   shift, and go to state 130
    tSHIFT_RIGHT  shift, and go to state 131
    tAMP_XOR      shift, and go to state 132

    $default  reduce using rule 85 (switch_condition)


State 246

   72 if_stmt: tIF if_condition block .

    $default  reduce using rule 72 (if_stmt)


State 247

   51 block: simple_block . tSEMICOLON
   73 if_stmt: tIF if_condition simple_block . tELSE else_block

    tELSE       shift, and go to state 267
    tSEMICOLON  shift, and go to state 97


State 248

   74 if_condition: simple_stmt expr .
  103 expr: expr . tPLUS expr
  104     | expr . tMINUS expr
  105     | expr . tMULT expr
  106     | expr . tDIV expr
  107     | expr . tMOD expr
  108     | expr . tLT expr
  109     | expr . tLT_EQ expr
  110     | expr . tGT expr
  111     | expr . tGT_EQ expr
  112     | expr . tEQ_EQ expr
  113     | expr . tNOT_EQUALS expr
  114     | expr . tSHIFT_RIGHT expr
  115     | expr . tSHIFT_LEFT expr
  116     | expr . tAND expr
  117     | expr . tAMP_XOR expr
  118     | expr . tOR expr
  119     | expr . tXOR expr
  120     | expr . tLOGICAL_AND expr
  121     | expr . tLOGICAL_OR expr

    tMULT         shift, and go to state 114
    tDIV          shift, and go to state 115
    tPLUS         shift, and go to state 116
    tMINUS        shift, and go to state 117
    tAND          shift, and go to state 118
    tOR           shift, and go to state 119
    tMOD          shift, and go to state 120
    tXOR          shift, and go to state 121
    tEQ_EQ        shift, and go to state 122
    tNOT_EQUALS   shift, and go to state 123
    tLOGICAL_AND  shift, and go to state 124
    tLOGICAL_OR   shift, and go to state 125
    tLT           shift, and go to state 126
    tGT           shift, and go to state 127
    tLT_EQ        shift, and go to state 128
    tGT_EQ        shift, and go to state 129
    tSHIFT_LEFT   shift, and go to state 130
    tSHIFT_RIGHT  shift, and go to state 131
    tAMP_XOR      shift, and go to state 132

    $default  reduce using rule 74 (if_condition)


State 249

   78 for_stmt: tFOR for_condition block .

    $default  reduce using rule 78 (for_stmt)


State 250

   80 for_condition: simple_stmt_no_semi tSEMICOLON . condition tSEMICOLON simple_stmt_no_semi

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    $default  reduce using rule 82 (condition)

    condition          go to state 268
    expr               go to state 269
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 251

   70 return_stmt: tRETURN expr tSEMICOLON .

    $default  reduce using rule 70 (return_stmt)


State 252

   67 print_stmt: tPRINT tOPEN_PAREN tCLOSE_PAREN . tSEMICOLON

    tSEMICOLON  shift, and go to state 270


State 253

   66 print_stmt: tPRINT tOPEN_PAREN exprlist . tCLOSE_PAREN tSEMICOLON
  102 exprlist: exprlist . tCOMMA expr

    tCOMMA        shift, and go to state 113
    tCLOSE_PAREN  shift, and go to state 271


State 254

   69 println_stmt: tPRINTLN tOPEN_PAREN tCLOSE_PAREN . tSEMICOLON

    tSEMICOLON  shift, and go to state 272


State 255

   68 println_stmt: tPRINTLN tOPEN_PAREN exprlist . tCLOSE_PAREN tSEMICOLON
  102 exprlist: exprlist . tCOMMA expr

    tCOMMA        shift, and go to state 113
    tCLOSE_PAREN  shift, and go to state 273


State 256

  100 shortDcl: exprlist tDECL exprlist .
  102 exprlist: exprlist . tCOMMA expr

    tCOMMA  shift, and go to state 113

    $default  reduce using rule 100 (shortDcl)


State 257

   99 assignment_stmt: exprlist assign exprlist .
  102 exprlist: exprlist . tCOMMA expr

    tCOMMA  shift, and go to state 113

    $default  reduce using rule 99 (assignment_stmt)


State 258

  102 exprlist: exprlist . tCOMMA expr
  129 append_expr: tAPPEND tOPEN_PAREN tIDENTIFIER tCOMMA exprlist . tCLOSE_PAREN

    tCOMMA        shift, and go to state 113
    tCLOSE_PAREN  shift, and go to state 274


State 259

  155 slice_range: tOPEN_SQ tCOLON expr tCOLON . expr tCLOSE_SQ

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    expr               go to state 275
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 260

  151 slice_range: tOPEN_SQ tCOLON expr tCLOSE_SQ .

    $default  reduce using rule 151 (slice_range)


State 261

  152 slice_range: tOPEN_SQ expr tCOLON tCLOSE_SQ .

    $default  reduce using rule 152 (slice_range)


State 262

  103 expr: expr . tPLUS expr
  104     | expr . tMINUS expr
  105     | expr . tMULT expr
  106     | expr . tDIV expr
  107     | expr . tMOD expr
  108     | expr . tLT expr
  109     | expr . tLT_EQ expr
  110     | expr . tGT expr
  111     | expr . tGT_EQ expr
  112     | expr . tEQ_EQ expr
  113     | expr . tNOT_EQUALS expr
  114     | expr . tSHIFT_RIGHT expr
  115     | expr . tSHIFT_LEFT expr
  116     | expr . tAND expr
  117     | expr . tAMP_XOR expr
  118     | expr . tOR expr
  119     | expr . tXOR expr
  120     | expr . tLOGICAL_AND expr
  121     | expr . tLOGICAL_OR expr
  150 slice_range: tOPEN_SQ expr tCOLON expr . tCLOSE_SQ
  154            | tOPEN_SQ expr tCOLON expr . tCOLON expr tCLOSE_SQ

    tCOLON        shift, and go to state 276
    tMULT         shift, and go to state 114
    tDIV          shift, and go to state 115
    tPLUS         shift, and go to state 116
    tMINUS        shift, and go to state 117
    tAND          shift, and go to state 118
    tOR           shift, and go to state 119
    tMOD          shift, and go to state 120
    tXOR          shift, and go to state 121
    tCLOSE_SQ     shift, and go to state 277
    tEQ_EQ        shift, and go to state 122
    tNOT_EQUALS   shift, and go to state 123
    tLOGICAL_AND  shift, and go to state 124
    tLOGICAL_OR   shift, and go to state 125
    tLT           shift, and go to state 126
    tGT           shift, and go to state 127
    tLT_EQ        shift, and go to state 128
    tGT_EQ        shift, and go to state 129
    tSHIFT_LEFT   shift, and go to state 130
    tSHIFT_RIGHT  shift, and go to state 131
    tAMP_XOR      shift, and go to state 132


State 263

   90 case: tDEFAULT .

    $default  reduce using rule 90 (case)


State 264

   89 case: tCASE . exprlist

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    exprlist           go to state 278
    expr               go to state 83
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 265

   83 switch_stmt: tSWITCH switch_condition tOPEN_BRACE caselist . tCLOSE_BRACE

    tCLOSE_BRACE  shift, and go to state 279


State 266

   88 caselist: case . tCOLON statement_list

    tCOLON  shift, and go to state 280


State 267

   73 if_stmt: tIF if_condition simple_block tELSE . else_block

    tIF          shift, and go to state 141
    tOPEN_BRACE  shift, and go to state 54

    block         go to state 281
    simple_block  go to state 57
    if_stmt       go to state 282
    else_block    go to state 283


State 268

   80 for_condition: simple_stmt_no_semi tSEMICOLON condition . tSEMICOLON simple_stmt_no_semi

    tSEMICOLON  shift, and go to state 284


State 269

   81 condition: expr .
  103 expr: expr . tPLUS expr
  104     | expr . tMINUS expr
  105     | expr . tMULT expr
  106     | expr . tDIV expr
  107     | expr . tMOD expr
  108     | expr . tLT expr
  109     | expr . tLT_EQ expr
  110     | expr . tGT expr
  111     | expr . tGT_EQ expr
  112     | expr . tEQ_EQ expr
  113     | expr . tNOT_EQUALS expr
  114     | expr . tSHIFT_RIGHT expr
  115     | expr . tSHIFT_LEFT expr
  116     | expr . tAND expr
  117     | expr . tAMP_XOR expr
  118     | expr . tOR expr
  119     | expr . tXOR expr
  120     | expr . tLOGICAL_AND expr
  121     | expr . tLOGICAL_OR expr

    tMULT         shift, and go to state 114
    tDIV          shift, and go to state 115
    tPLUS         shift, and go to state 116
    tMINUS        shift, and go to state 117
    tAND          shift, and go to state 118
    tOR           shift, and go to state 119
    tMOD          shift, and go to state 120
    tXOR          shift, and go to state 121
    tEQ_EQ        shift, and go to state 122
    tNOT_EQUALS   shift, and go to state 123
    tLOGICAL_AND  shift, and go to state 124
    tLOGICAL_OR   shift, and go to state 125
    tLT           shift, and go to state 126
    tGT           shift, and go to state 127
    tLT_EQ        shift, and go to state 128
    tGT_EQ        shift, and go to state 129
    tSHIFT_LEFT   shift, and go to state 130
    tSHIFT_RIGHT  shift, and go to state 131
    tAMP_XOR      shift, and go to state 132

    $default  reduce using rule 81 (condition)


State 270

   67 print_stmt: tPRINT tOPEN_PAREN tCLOSE_PAREN tSEMICOLON .

    $default  reduce using rule 67 (print_stmt)


State 271

   66 print_stmt: tPRINT tOPEN_PAREN exprlist tCLOSE_PAREN . tSEMICOLON

    tSEMICOLON  shift, and go to state 285


State 272

   69 println_stmt: tPRINTLN tOPEN_PAREN tCLOSE_PAREN tSEMICOLON .

    $default  reduce using rule 69 (println_stmt)


State 273

   68 println_stmt: tPRINTLN tOPEN_PAREN exprlist tCLOSE_PAREN . tSEMICOLON

    tSEMICOLON  shift, and go to state 286


State 274

  129 append_expr: tAPPEND tOPEN_PAREN tIDENTIFIER tCOMMA exprlist tCLOSE_PAREN .

    $default  reduce using rule 129 (append_expr)


State 275

  103 expr: expr . tPLUS expr
  104     | expr . tMINUS expr
  105     | expr . tMULT expr
  106     | expr . tDIV expr
  107     | expr . tMOD expr
  108     | expr . tLT expr
  109     | expr . tLT_EQ expr
  110     | expr . tGT expr
  111     | expr . tGT_EQ expr
  112     | expr . tEQ_EQ expr
  113     | expr . tNOT_EQUALS expr
  114     | expr . tSHIFT_RIGHT expr
  115     | expr . tSHIFT_LEFT expr
  116     | expr . tAND expr
  117     | expr . tAMP_XOR expr
  118     | expr . tOR expr
  119     | expr . tXOR expr
  120     | expr . tLOGICAL_AND expr
  121     | expr . tLOGICAL_OR expr
  155 slice_range: tOPEN_SQ tCOLON expr tCOLON expr . tCLOSE_SQ

    tMULT         shift, and go to state 114
    tDIV          shift, and go to state 115
    tPLUS         shift, and go to state 116
    tMINUS        shift, and go to state 117
    tAND          shift, and go to state 118
    tOR           shift, and go to state 119
    tMOD          shift, and go to state 120
    tXOR          shift, and go to state 121
    tCLOSE_SQ     shift, and go to state 287
    tEQ_EQ        shift, and go to state 122
    tNOT_EQUALS   shift, and go to state 123
    tLOGICAL_AND  shift, and go to state 124
    tLOGICAL_OR   shift, and go to state 125
    tLT           shift, and go to state 126
    tGT           shift, and go to state 127
    tLT_EQ        shift, and go to state 128
    tGT_EQ        shift, and go to state 129
    tSHIFT_LEFT   shift, and go to state 130
    tSHIFT_RIGHT  shift, and go to state 131
    tAMP_XOR      shift, and go to state 132


State 276

  154 slice_range: tOPEN_SQ expr tCOLON expr tCOLON . expr tCLOSE_SQ

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    expr               go to state 288
    unary_op           go to state 84
    append_expr        go to state 85
    other_expressions  go to state 86
    operand            go to state 87
    function_call      go to state 88
    typecasting        go to state 89
    struct_selector    go to state 90


State 277

  150 slice_range: tOPEN_SQ expr tCOLON expr tCLOSE_SQ .

    $default  reduce using rule 150 (slice_range)


State 278

   89 case: tCASE exprlist .
  102 exprlist: exprlist . tCOMMA expr

    tCOMMA  shift, and go to state 113

    $default  reduce using rule 89 (case)


State 279

   83 switch_stmt: tSWITCH switch_condition tOPEN_BRACE caselist tCLOSE_BRACE .

    $default  reduce using rule 83 (switch_stmt)


State 280

   88 caselist: case tCOLON . statement_list

    $default  reduce using rule 54 (statement_list)

    statement_list  go to state 289


State 281

   76 else_block: block .

    $default  reduce using rule 76 (else_block)


State 282

   77 else_block: if_stmt .

    $default  reduce using rule 77 (else_block)


State 283

   73 if_stmt: tIF if_condition simple_block tELSE else_block .

    $default  reduce using rule 73 (if_stmt)


State 284

   80 for_condition: simple_stmt_no_semi tSEMICOLON condition tSEMICOLON . simple_stmt_no_semi

    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    simple_stmt_no_semi  go to state 290
    assignment_stmt      go to state 161
    shortDcl             go to state 162
    exprlist             go to state 163
    expr                 go to state 164
    unary_op             go to state 84
    append_expr          go to state 85
    other_expressions    go to state 86
    operand              go to state 87
    function_call        go to state 88
    typecasting          go to state 89
    struct_selector      go to state 90


State 285

   66 print_stmt: tPRINT tOPEN_PAREN exprlist tCLOSE_PAREN tSEMICOLON .

    $default  reduce using rule 66 (print_stmt)


State 286

   68 println_stmt: tPRINTLN tOPEN_PAREN exprlist tCLOSE_PAREN tSEMICOLON .

    $default  reduce using rule 68 (println_stmt)


State 287

  155 slice_range: tOPEN_SQ tCOLON expr tCOLON expr tCLOSE_SQ .

    $default  reduce using rule 155 (slice_range)


State 288

  103 expr: expr . tPLUS expr
  104     | expr . tMINUS expr
  105     | expr . tMULT expr
  106     | expr . tDIV expr
  107     | expr . tMOD expr
  108     | expr . tLT expr
  109     | expr . tLT_EQ expr
  110     | expr . tGT expr
  111     | expr . tGT_EQ expr
  112     | expr . tEQ_EQ expr
  113     | expr . tNOT_EQUALS expr
  114     | expr . tSHIFT_RIGHT expr
  115     | expr . tSHIFT_LEFT expr
  116     | expr . tAND expr
  117     | expr . tAMP_XOR expr
  118     | expr . tOR expr
  119     | expr . tXOR expr
  120     | expr . tLOGICAL_AND expr
  121     | expr . tLOGICAL_OR expr
  154 slice_range: tOPEN_SQ expr tCOLON expr tCOLON expr . tCLOSE_SQ

    tMULT         shift, and go to state 114
    tDIV          shift, and go to state 115
    tPLUS         shift, and go to state 116
    tMINUS        shift, and go to state 117
    tAND          shift, and go to state 118
    tOR           shift, and go to state 119
    tMOD          shift, and go to state 120
    tXOR          shift, and go to state 121
    tCLOSE_SQ     shift, and go to state 291
    tEQ_EQ        shift, and go to state 122
    tNOT_EQUALS   shift, and go to state 123
    tLOGICAL_AND  shift, and go to state 124
    tLOGICAL_OR   shift, and go to state 125
    tLT           shift, and go to state 126
    tGT           shift, and go to state 127
    tLT_EQ        shift, and go to state 128
    tGT_EQ        shift, and go to state 129
    tSHIFT_LEFT   shift, and go to state 130
    tSHIFT_RIGHT  shift, and go to state 131
    tAMP_XOR      shift, and go to state 132


State 289

   53 statement_list: statement_list . statement
   88 caselist: case tCOLON statement_list .

    tBREAK       shift, and go to state 139
    tSWITCH      shift, and go to state 140
    tIF          shift, and go to state 141
    tTYPE        shift, and go to state 9
    tCONTINUE    shift, and go to state 142
    tFOR         shift, and go to state 143
    tRETURN      shift, and go to state 144
    tVAR         shift, and go to state 10
    tPRINT       shift, and go to state 145
    tPRINTLN     shift, and go to state 146
    tAPPEND      shift, and go to state 66
    tPLUS        shift, and go to state 67
    tMINUS       shift, and go to state 68
    tXOR         shift, and go to state 69
    tNOT         shift, and go to state 70
    tOPEN_PAREN  shift, and go to state 71
    tOPEN_BRACE  shift, and go to state 54
    tINT         shift, and go to state 72
    tFLOAT       shift, and go to state 73
    tBOOLEAN     shift, and go to state 74
    tRUNE        shift, and go to state 75
    tINTVAL      shift, and go to state 76
    tFLOATVAL    shift, and go to state 77
    tSTRINGVAL   shift, and go to state 78
    tRAWSTRVAL   shift, and go to state 79
    tIDENTIFIER  shift, and go to state 80
    tRUNEVAL     shift, and go to state 81

    $default  reduce using rule 88 (caselist)

    dcl                  go to state 148
    varDcl               go to state 13
    typeDcl              go to state 14
    block                go to state 149
    simple_block         go to state 57
    statement            go to state 150
    print_stmt           go to state 151
    println_stmt         go to state 152
    return_stmt          go to state 153
    if_stmt              go to state 154
    for_stmt             go to state 155
    switch_stmt          go to state 156
    break_stmt           go to state 157
    continue_stmt        go to state 158
    simple_stmt          go to state 159
    simple_stmt_no_semi  go to state 160
    assignment_stmt      go to state 161
    shortDcl             go to state 162
    exprlist             go to state 163
    expr                 go to state 164
    unary_op             go to state 84
    append_expr          go to state 85
    other_expressions    go to state 86
    operand              go to state 87
    function_call        go to state 88
    typecasting          go to state 89
    struct_selector      go to state 90


State 290

   80 for_condition: simple_stmt_no_semi tSEMICOLON condition tSEMICOLON simple_stmt_no_semi .

    $default  reduce using rule 80 (for_condition)


State 291

  154 slice_range: tOPEN_SQ expr tCOLON expr tCOLON expr tCLOSE_SQ .

    $default  reduce using rule 154 (slice_range)
